template: 
  - binary_sensor:
      - name: dwd_weather_warnings_active
        state: >
          {% if (states('sensor.dwd_weather_warnings_advance_warning_level') | float(0) > 0) or (states('sensor.dwd_weather_warnings_current_warning_level') | float(0) > 0) %}
            {{ true }}
          {% else %}
            {{ false }}
          {% endif %}

input_text:
  helper_wetterwarnungen_bekannte_ids:
    max: 255

automation:
  - id: '01da7c50-7db6-4729-83e7-95910acdd914'
    alias: Wetter-Warnungen
    description: ''
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.dwd_weather_warnings_active
        from: 'off'
        to: 'on'
        id: dwd_weather_warnings_active
      - platform: state
        entity_id: binary_sensor.dwd_weather_warnings_active
        to: 'off'
        for: '00:35:00'
        id: dwd_weather_warnings_inactive
      - platform: state
        entity_id: sensor.dwd_weather_warnings_advance_warning_level
        id: warnings_changed
      - platform: state
        entity_id: sensor.dwd_weather_warnings_current_warning_level
        id: warnings_changed
    condition: []
    action:
      - choose:
        - conditions:
          - condition: trigger
            id: dwd_weather_warnings_active
          sequence:
          - service: notify.telegram_jo
            data:
              message: 'Wetterwarnung'
        - conditions:
          - condition: trigger
            id: dwd_weather_warnings_inactive
          sequence:
          - service: input_text.set_value
            data:
              value: 'inactive'
            target:
              entity_id: input_text.helper_wetterwarnungen_bekannte_ids
        - conditions:
          - condition: trigger
            id: warnings_changed
          sequence:
          - repeat:
              count: "{{ state_attr('sensor.dwd_weather_warnings_advance_warning_level','warning_count') | int(0) }}"
              sequence:
                - condition: template
                  value_template: >
                    {{ '___' in trigger.to_state.state }}
                    {% set str_start = '2022-04-10T22:00:00+00:00' %}
                    {% set str_end = '2022-04-11T06:00:00+00:00' %}
                    {% set event = 'FROSTIO' %}
                    {% set level = 1 %}
                    {% set event_fix = event[:5] %}
                    {% set str_hours = '{:03.0f}'.format((as_datetime(str_end) - as_datetime(str_start)).seconds / 3600) %}
                    {% set str_ts_start = '{:10.0f}'.format(as_timestamp('2022-04-11T06:00:00+00:00')) %}
                    {% set str_level = '{:1.0f}'.format(level) %}
                    {% set id = (event_fix + '-' + str_ts_start + '-' + str_hours + '-' + str_level) | slugify(separator='-') %}
                    {{ id not in states('input_text.helper_wetterwarnungen_bekannte_ids') }}
                - service: notify.telegram_jo
                  data:
                    message: 'neue Wetterwarnung erkannt'
        default: []