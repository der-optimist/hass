# strings to replace:
#
# friendly name: Licht EG Windfang Brettlicht
# id name: e_wf_brettlicht
# light: light.brettlicht_windfang

input_boolean:
  automation_switch_light_e_wf_brettlicht:
    name: Auto Licht EG Windfang Brettlicht
    icon: mdi:auto-fix
  helper_light_auto_switched_e_wf_brettlicht:
    name: Helper - Auto Switched - Licht EG Windfang Brettlicht
    initial: off
  helper_light_manually_switched_on_e_wf_brettlicht:
    name: Helper - Man Switched on - Licht EG Windfang Brettlicht
    initial: off
  helper_light_manually_switched_off_e_wf_brettlicht:
    name: Helper - Man Switched off - Licht EG Windfang Brettlicht
    initial: off

template:
  - sensor:
      - name: helper_light_basic_brightness_e_wf_brettlicht
        unit_of_measurement: "%"
        state: >
          {% set hours = 
            ['00:00','07:59',70],
            ['08:00','08:59',75],
            ['09:00','15:59',80],
            ['16:00','16:59',75],
            ['17:00','23:59',70] %}
          {% set t = states('sensor.time').replace(':','')|int %}
          {% for h in hours if (h[0].replace(':','')|int) <= t <= (h[1].replace(':','')|int) %}
              {{h[2]}}
          {% endfor %}
      - name: helper_light_effective_brightness_e_wf_brettlicht
        unit_of_measurement: "%"
        state: >
          {% if is_state('switch.majo_schlafen', 'on') %}
            {{ int(40) }}
          {% else %}
            {{ states('sensor.helper_light_basic_brightness_e_wf_brettlicht') }}
          {% endif %}
        attributes:
          special_brightness: >
            {{ [states('switch.majo_schlafen')] | select('equalto', 'on') | list | count }}
      - name: helper_light_min_illuminance_e_wf_brettlicht
        unit_of_measurement: "lx"
        state: >
          {% set hours = 
            ['00:00','04:59',30],
            ['05:00','06:29',40],
            ['06:30','08:59',50],
            ['09:00','16:59',60],
            ['17:00','18:59',50],
            ['19:00','22:59',40],
            ['23:00','23:59',30] %}
          {% set t = states('sensor.time').replace(':','')|int %}
          {% for h in hours if (h[0].replace(':','')|int) <= t <= (h[1].replace(':','')|int) %}
              {{h[2]}}
          {% endfor %}
      - name: helper_light_switching_off_entities_e_wf_brettlicht
        unit_of_measurement: "number"
        state: >
          {{ [] | select('equalto', 'on') | list | count }}
    binary_sensor:
      - name: helper_light_trigger_e_wf_brettlicht
        state: >
          {{ is_state('binary_sensor.pm_e_wf_haustur', 'on')
             or is_state('binary_sensor.pm_e_wf_garderobe', 'on')
             or is_state('binary_sensor.pm_e_wf_flur', 'on')
             or is_state('binary_sensor.pm_e_fl_windfang', 'on')
             or is_state('binary_sensor.pm_e_fl_treppe_og', 'on')
             or is_state('binary_sensor.pm_e_wc', 'on')
             or is_state('binary_sensor.pm_ktr_flur', 'on') }}
      - name: helper_light_keeping_off_entities_e_wf_brettlicht
        state: >
          {{ false }}
      - name: helper_light_keeping_on_entities_e_wf_brettlicht
        state: >
          {{ false }}
      - name: helper_light_keeping_fix_entities_e_wf_brettlicht
        state: >
          {{ false }}
        attributes:
          brightness: >
            {{ int(0) }}
      - name: helper_light_is_too_dark_e_wf_brettlicht
        state: >
          {{ (states("sensor.helligkeit_windfang_pm") | float(0)) < (states("sensor.helper_light_min_illuminance_e_wf_brettlicht") | float(1)) }}
      - name: helper_light_is_too_bright_e_wf_brettlicht
        state: >
          {{ (states("sensor.helligkeit_windfang_pm") | float(0)) > (states("sensor.helper_light_min_illuminance_e_wf_brettlicht") | float(1) + 100 ) }}

automation:
  - alias: Licht EG Windfang Brettlicht
    id: 'auto_light_e_wf_brettlicht'
    description: ''
    trace:
      stored_traces: 10
    use_blueprint:
      path: /config/blueprints/light_automation.yaml
      input:
        light_entity: light.brettlicht_windfang
        automation_switch: input_boolean.automation_switch_light_e_wf_brettlicht
        trigger: binary_sensor.helper_light_trigger_e_wf_brettlicht
        helper_effective_brightness: sensor.helper_light_effective_brightness_e_wf_brettlicht
        helper_basic_brightness: sensor.helper_light_basic_brightness_e_wf_brettlicht
        helper_is_too_dark: binary_sensor.helper_light_is_too_dark_e_wf_brettlicht
        helper_is_too_bright: binary_sensor.helper_light_is_too_bright_e_wf_brettlicht
        helper_auto_switched: input_boolean.helper_light_auto_switched_e_wf_brettlicht
        helper_manually_switched_on: input_boolean.helper_light_manually_switched_on_e_wf_brettlicht
        helper_manually_switched_off: input_boolean.helper_light_manually_switched_off_e_wf_brettlicht
        helper_switching_off_entities: sensor.helper_light_switching_off_entities_e_wf_brettlicht
        helper_keeping_on_entities: binary_sensor.helper_light_keeping_on_entities_e_wf_brettlicht
        helper_keeping_off_entities: binary_sensor.helper_light_keeping_off_entities_e_wf_brettlicht
        helper_keeping_fix_entities: binary_sensor.helper_light_keeping_fix_entities_e_wf_brettlicht
        transition_time: 1