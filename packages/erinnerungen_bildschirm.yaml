rest:
  - resource_template: 'http://localhost:8123/api/calendars/calendar.erinnerungen_bildschirm?start={{ utcnow().strftime("%Y-%m-%dT%H:%M:%S") }}Z&end={{ (utcnow() + timedelta(minutes = 1)).strftime("%Y-%m-%dT%H:%M:%S") }}Z'
    headers:
      Authorization: !secret calendar_api_token
    scan_interval: 180
    sensor:
      - name: Erinnerungen Bildschirm 0
        value_template: >
          {% set len = (value_json | count) %}
          {% if len > 0 %}
            {{ value_json[0].summary }}___{{ value_json[0].etag | regex_replace(find='"', replace='', ignorecase=False) }}
          {% else %}
            no_event
          {% endif %}
      - name: Erinnerungen Bildschirm 1
        value_template: >
          {% set len = (value_json | count) %}
          {% if len > 1 %}
            {{ value_json[1].summary }}___{{ value_json[1].etag | regex_replace(find='"', replace='', ignorecase=False) }}
          {% else %}
            no_event
          {% endif %}
      - name: Erinnerungen Bildschirm 2
        value_template: >
          {% set len = (value_json | count) %}
          {% if len > 2 %}
            {{ value_json[2].summary }}___{{ value_json[2].etag | regex_replace(find='"', replace='', ignorecase=False) }}
          {% else %}
            no_event
          {% endif %}
      - name: Erinnerungen Bildschirm 3
        value_template: >
          {% set len = (value_json | count) %}
          {% if len > 3 %}
            {{ value_json[3].summary }}___{{ value_json[3].etag | regex_replace(find='"', replace='', ignorecase=False) }}
          {% else %}
            no_event
          {% endif %}

input_boolean:
  reminder_erinnerungen_bildschirm_0:
  reminder_erinnerungen_bildschirm_1:
  reminder_erinnerungen_bildschirm_2:
  reminder_erinnerungen_bildschirm_3:
  reminder_erinnerungen_bildschirm_4:
  reminder_erinnerungen_bildschirm_5:
  reminder_erinnerungen_bildschirm_6:
  reminder_erinnerungen_bildschirm_7:
  reminder_erinnerungen_bildschirm_8:
  reminder_erinnerungen_bildschirm_9:

input_text:
  helper_erinnerungen_bildschirm_known_etags:
    max: 255

template: 
  - sensor:
      - unique_id: helper_erinnerungen_bildschirm_first_free_reminder
        state: >
          {% if is_state('input_boolean.reminder_erinnerungen_bildschirm_0','off') %}
            {{ 'input_boolean.reminder_erinnerungen_bildschirm_0' }}
          {% elif is_state('input_boolean.reminder_erinnerungen_bildschirm_1','off') %}
            {{ 'input_boolean.reminder_erinnerungen_bildschirm_1' }}
          {% elif is_state('input_boolean.reminder_erinnerungen_bildschirm_2','off') %}
            {{ 'input_boolean.reminder_erinnerungen_bildschirm_2' }}
          {% elif is_state('input_boolean.reminder_erinnerungen_bildschirm_3','off') %}
            {{ 'input_boolean.reminder_erinnerungen_bildschirm_3' }}
          {% elif is_state('input_boolean.reminder_erinnerungen_bildschirm_4','off') %}
            {{ 'input_boolean.reminder_erinnerungen_bildschirm_4' }}
          {% elif is_state('input_boolean.reminder_erinnerungen_bildschirm_5','off') %}
            {{ 'input_boolean.reminder_erinnerungen_bildschirm_5' }}
          {% elif is_state('input_boolean.reminder_erinnerungen_bildschirm_6','off') %}
            {{ 'input_boolean.reminder_erinnerungen_bildschirm_6' }}
          {% elif is_state('input_boolean.reminder_erinnerungen_bildschirm_7','off') %}
            {{ 'input_boolean.reminder_erinnerungen_bildschirm_7' }}
          {% elif is_state('input_boolean.reminder_erinnerungen_bildschirm_8','off') %}
            {{ 'input_boolean.reminder_erinnerungen_bildschirm_8' }}
          {% elif is_state('input_boolean.reminder_erinnerungen_bildschirm_9','off') %}
            {{ 'input_boolean.reminder_erinnerungen_bildschirm_9' }}
          {% else %}
            {{ 'no_free' }}
          {% endif %}

automation:
  - id: 'f973a2b5-ba8a-46fe-8d3b-502aa1644799'
    alias: Erinnerungen Bildschirm
    description: ''
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.erinnerungen_bildschirm_0
        to:
        id: erinnerungen_bildschirm_changed
      - platform: state
        entity_id: sensor.erinnerungen_bildschirm_1
        to:
        id: erinnerungen_bildschirm_changed
      - platform: state
        entity_id: sensor.erinnerungen_bildschirm_2
        to:
        id: erinnerungen_bildschirm_changed
      - platform: state
        entity_id: sensor.erinnerungen_bildschirm_3
        to:
        id: erinnerungen_bildschirm_changed
      - platform: state
        entity_id: sensor.erinnerungen_bildschirm_0
        to: no_event
        for: "00:05:00"
        id: no_active_reminder
      - platform: state
        entity_id: sensor.template_helper_erinnerungen_bildschirm_first_free_reminder
        to: no_free
        for: "00:05:00"
        id: no_free_reminder
    condition: []
    action:
      - choose:
        - conditions:
          - condition: trigger
            id: erinnerungen_bildschirm_changed
          - condition: template
            value_template: >
              {{ '___' in trigger.to_state.state }}
          - condition: template
            value_template: >
              {{ trigger.to_state.state.split('___')[1] not in states('input_text.helper_erinnerungen_bildschirm_known_etags') }}
          - condition: template
            value_template: >
              {{ 'input_boolean.reminder_erinnerungen_bildschirm_' in states('sensor.template_helper_erinnerungen_bildschirm_first_free_reminder') }}
          sequence:
          - service: python_script.set_state
            data:
              entity_id: "{{ states('sensor.template_helper_erinnerungen_bildschirm_first_free_reminder') }}"
              friendly_name: "{{ trigger.to_state.state.split('___')[0] }}"
              entity_picture: '/local/icons/reminders/exclamation_mark_blink.svg'
              state: 'on'
              allow_create: false
          - service: input_text.set_value
            data:
              value: >
                {% set ns = namespace() %}
                {% set ns.tags = '' %}
                {% for etag in states('input_text.helper_erinnerungen_bildschirm_known_etags').split('___') %}
                  {% if ns.tags == '' %}
                    {% set ns.tags = ns.tags + etag %}
                  {% else %}
                    {% set ns.tags = ns.tags + '___' + etag %}
                  {% endif %}
                {% endfor %}
                {% if ns.tags == '' %}
                  {% set ns.tags = ns.tags + trigger.to_state.state.split('___')[1] %}
                {% else %}
                  {% set ns.tags = ns.tags + '___' + trigger.to_state.state.split('___')[1] %}
                {% endif %}
                {{ ns.tags }}
            target:
              entity_id: input_text.helper_erinnerungen_bildschirm_known_etags
        - conditions:
          - condition: trigger
            id: no_active_reminder
          sequence:
          - service: input_text.set_value
            data:
              value: 'inactive'
            target:
              entity_id: input_text.helper_erinnerungen_bildschirm_known_etags
        - conditions:
          - condition: trigger
            id: no_free_reminder
          sequence:
          - service: notify.telegram_jo
            data:
              message: 'Alle 10 vorgesehenen Erinnerungen Bildschirm sind belegt! Neue werden nicht angelegt. Bitte mal was erledigen...'