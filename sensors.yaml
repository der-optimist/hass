#
# --------------------------------
# --                            --
# --          Template          --
# --                            --
# --------------------------------
#
  - platform: template
    sensors:
#
#     --------------------------------
#     --          Date              --
#     --------------------------------
#
      date_template:
        friendly_name: 'Datum'
        value_template: '{{ as_timestamp(now()) | timestamp_custom("%d.%m.%Y", True) }}'
#
#     --------------------------------
#     --     Temporäre Dinge        --
#     --------------------------------
#
      helligkeit_wetterstation_ersatz:
        value_template: >-
          {{ (states('sensor.el_leistung_pv_ac') | float(0)) * 5 }}
        friendly_name: 'Helligkeit Wetterstation Ersatz'
        unit_of_measurement: 'lx'
        icon_template: mdi:weather-sunny
#
#     --------------------------------
#     --    Temp. und Luftf.        --
#     --------------------------------
#
      temp_aussen:
        friendly_name: 'Temp. Außen'
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.bosch_outdoor_temperature') }}"
        device_class: temperature
      luftfeuchtigkeit_aussen:
        friendly_name: 'Luftfeuchtigkeit Außen'
        unit_of_measurement: '%'
        value_template: "{{ states('sensor.humidity_outside_internet') }}"
        device_class: humidity
      luftfeuchtigkeit_kuche_aqara:
        friendly_name: 'Luftfeuchtigkeit Küche'
        unit_of_measurement: '%'
        value_template: "{{ (states('sensor.lumi_lumi_weather_57dc3d03_humidity') | float(0)) | round }}"
        device_class: humidity
      temp_kuche_aqara:
        friendly_name: 'Temp. Küche Aqara'
        unit_of_measurement: '°C'
        value_template: "{{ (states('sensor.lumi_lumi_weather_57dc3d03_temperature') | float(0)) | round(1) }}"
        device_class: temperature
      luftdruck_kuche_aqara:
        friendly_name: 'Luftdruck Küche Aqara'
        unit_of_measurement: 'hPa'
        value_template: "{{ (states('sensor.lumi_lumi_weather_57dc3d03_pressure') | float(0)) | round }}"
        device_class: pressure
      luftfeuchtigkeit_waschkuche:
        friendly_name: 'Luftfeuchtigkeit Waschküche'
        unit_of_measurement: '%'
        value_template: "{{ states('sensor.luftfeuchtigkeit_relativ_esp_wemos_d1_5_sht31') }}"
        device_class: humidity
      temp_waschkuche:
        friendly_name: 'Temp. Waschküche'
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.temp_esp_wemos_d1_5_sht31') }}"
        device_class: temperature
      luftfeuchtigkeit_werkelraum:
        friendly_name: 'Luftfeuchtigkeit Werkelraum'
        unit_of_measurement: '%'
        value_template: "{{ states('sensor.luftfeuchtigkeit_relativ_esp_wemos_d1_6_sht31') }}"
        device_class: humidity
      temp_werkelraum:
        friendly_name: 'Temp. Werkelraum'
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.temp_esp_wemos_d1_6_sht31') }}"
        device_class: temperature
      luftfeuchtigkeit_partyraum:
        friendly_name: 'Luftfeuchtigkeit Partyraum'
        unit_of_measurement: '%'
        value_template: "{{ states('sensor.luftfeuchtigkeit_relativ_esp_wemos_d1_11_sht31') }}"
        device_class: humidity
      temp_partyraum:
        friendly_name: 'Temp. Partyraum'
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.temp_esp_wemos_d1_11_sht31') }}"
        device_class: temperature
      luftfeuchtigkeit_vorratsraum:
        friendly_name: 'Luftfeuchtigkeit Speis'
        unit_of_measurement: '%'
        value_template: "{{ (states('sensor.lumi_lumi_weather_humidity') | float(3) -3) | round(1) }}"
        device_class: humidity
      temp_vorratsraum:
        friendly_name: 'Temp. Speis'
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.lumi_lumi_weather_temperature') }}"
        device_class: temperature
      temp_outside_internet:
        friendly_name: "Temperatur außen Internet"
        value_template: "{{ state_attr('weather.lieblingshaus', 'temperature') }}"
        unit_of_measurement: '°C'
        device_class: temperature
      humidity_outside_internet:
        friendly_name: "Luftfeuchtigkeit außen Internet"
        value_template: "{{ state_attr('weather.lieblingshaus', 'humidity') }}"
        unit_of_measurement: '%'
        device_class: humidity
#
#
#     --------------------------------
#     --     Stromverbrauch         --
#     --------------------------------
#
      stromzaehler_netzbezug:
        value_template: "{{ '%.1f'%(states('sensor.stromzahler_positive_active_energy_in_tariff_t1') | float(0) /1000) | float(0) }}"
        friendly_name: 'Stromzähler Netzbezug'
        unit_of_measurement: 'kWh'
        icon_template: mdi:counter
      stromzaehler_netzeinspeisung:
        value_template: "{{ '%.1f'%(states('sensor.stromzahler_negative_active_energy_in_tariff_t1') | float(0) /1000) | float(0) }}"
        friendly_name: 'Stromzähler Netzeinspeisung'
        unit_of_measurement: 'kWh'
        icon_template: mdi:counter
      stromkosten_netzbezug:
        value_template: "{{ '%.2f'%((states('sensor.stromzaehler_netzbezug') | float(0) ) * (states('input_number.strompreis') | float(0))) }}"
        friendly_name: 'Stromkosten Netzbezug'
        unit_of_measurement: '€'
        icon_template: mdi:currency-eur
#
#     --------------------------------
#     --        Ertrag PV           --
#     --------------------------------
#
      pv_geldertrag_durch_einspeisung_gesamt:
        value_template: "{{ '%.2f'%((states('sensor.stromzaehler_netzeinspeisung') | float(0) ) * (states('input_number.pv_einspeiseverguetung') | float(0))) }}"
        friendly_name: 'PV Ertrag Einspeisung'
        unit_of_measurement: '€'
        icon_template: mdi:currency-eur
      pv_geldertrag_durch_eigenverbrauch_gesamt:
        value_template: "{{ '%.2f'%(((states('sensor.stromzaehler_pv_ac_gesamt') | float(0) ) - (states('sensor.stromzaehler_netzeinspeisung') | float(0) ))* (states('input_number.strompreis') | float(0))) }}"
        friendly_name: 'PV Ertrag Eigenverbrauch'
        unit_of_measurement: '€'
        icon_template: mdi:currency-eur
      pv_geldertrag_gesamt:
        value_template: "{{ '%.2f'%((states('sensor.pv_geldertrag_durch_einspeisung_gesamt') | float(0) ) + (states('sensor.pv_geldertrag_durch_eigenverbrauch_gesamt') | float(0))) }}"
        friendly_name: 'PV Ertrag gesamt'
        unit_of_measurement: '€'
        icon_template: mdi:currency-eur
      pv_geldbetrag_bis_amortisation:
        value_template: "{{ '%.2f'%(13724.42 - (states('sensor.pv_geldertrag_gesamt') | float(13724.42))) }}"
        friendly_name: 'PV verbleibend bis Amortisation'
        unit_of_measurement: '€'
        icon_template: mdi:currency-eur
#
#     --------------------------------
#     --   Elektrische Leistung     --
#     --------------------------------
#
#       --------------------------------
#       --       Netz und PV          --
#       --------------------------------
#
      el_leistung_stromzaehler_netzbezug:
        value_template: "{{ states('sensor.stromzahler_sum_active_instantaneous_power') }}"
        friendly_name: 'El. Leistung Stromzähler Netzbezug'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_netz:
        value_template: >-
          {% if is_state('binary_sensor.ping_wechselrichter_pv','on') %}
            {{ states('sensor.power_grid_fronius_power_flow_0_192_168_178_28') | float(0) }}
          {% else %}
            {{ states('sensor.el_leistung_stromzaehler_netzbezug') | float(0) }}
          {% endif %}
        friendly_name: 'El. Leistung Netz (positiv gleich Bezug)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_einspeisung:
        value_template: >-
          {% if (states('sensor.el_leistung_netz') | float(0)) < 0 %}
            {{ -1*(states('sensor.el_leistung_netz') | float(0)) }}
          {% else %}
            0.0
          {% endif %}
        friendly_name: 'El. Leistung Einspeisung'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_pv_ac:
        value_template: >-
          {% if is_state('binary_sensor.ping_wechselrichter_pv','on') %}
            {{ states('sensor.power_photovoltaics_fronius_power_flow_0_192_168_178_28') | float(0) }}
          {% else %}
            0.0
          {% endif %}
        friendly_name: 'El. Leistung PV AC'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_pv_dc:
        value_template: >-
          {% if is_state('binary_sensor.ping_wechselrichter_pv','on') %}
            {{ ((states('sensor.voltage_dc_fronius_inverter_1_192_168_178_28') | float(0)) * (states('sensor.current_dc_fronius_inverter_1_192_168_178_28') | float(0))) + ((states('sensor.voltage_dc_2_fronius_inverter_1_192_168_178_28') | float(0)) * (states('sensor.current_dc_2_fronius_inverter_1_192_168_178_28') | float(0))) }}
          {% else %}
            0.0
          {% endif %}
        friendly_name: 'El. Leistung PV DC'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      wirkungsgrad_wechselrichter:
        value_template: >-
          {% set dc = ((states('sensor.voltage_dc_fronius_inverter_1_192_168_178_28') | float(1)) * (states('sensor.current_dc_fronius_inverter_1_192_168_178_28') | float(1))) + ((states('sensor.voltage_dc_2_fronius_inverter_1_192_168_178_28') | float(0)) * (states('sensor.current_dc_2_fronius_inverter_1_192_168_178_28') | float(0))) %}
          {% set ac = states('sensor.power_ac_fronius_inverter_1_192_168_178_28') | float(0) %}
          {% set eta = (ac / dc) * 100 %}
          {% if eta > 100 %}
            100.0
          {% elif eta < 0 %}
            0.0
          {% else %}
            {{ eta | round(1) }}
          {% endif %}
        friendly_name: 'Wirkungsgrad Wechselrichter'
        unit_of_measurement: '%'
        icon_template: mdi:chart-bell-curve-cumulative
      el_leistung_pv_dc_string1:
        value_template: "{{ ((states('sensor.voltage_dc_fronius_inverter_1_192_168_178_28') | float(0)) * (states('sensor.current_dc_fronius_inverter_1_192_168_178_28') | float(0))) |round(0) }}"
        friendly_name: 'El. Leistung PV DC String 1'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_pv_dc_string2:
        value_template: "{{ ((states('sensor.voltage_dc_2_fronius_inverter_1_192_168_178_28') | float(0)) * (states('sensor.current_dc_2_fronius_inverter_1_192_168_178_28') | float(0))) |round(0) }}"
        friendly_name: 'El. Leistung PV DC String 2'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      unterschied_pv_string1_string2:
        value_template: >-
          {% set dc1 = (states('sensor.el_leistung_pv_dc_string1') | float(0)) %}
          {% set dc2 = (states('sensor.el_leistung_pv_dc_string2') | float(0)) %}
          {% if dc1 > 500 and dc2 > 500 %}
            {{ (((dc1 - dc2) / (0.5*(dc1 + dc2))) * 100) | round(1) }}
          {% else %}
            {{ 0.0 }}
          {% endif %}
        friendly_name: 'Unterschied PV String 1 zu String 2'
        unit_of_measurement: '%'
        icon_template: mdi:percent-outline
      stromzaehler_pv_ac_gesamt:
        #value_template: "{{ (states('sensor.pv_ac_energy_riemann') | float(0) + 3740.43) | round(1) }}"
        value_template: "{{ ((states('sensor.energy_total_fronius_inverter_1_192_168_178_28') | float(0) / 1000) + 3740.43) | round(1) }}"
        # 3740.43 was total production of first inverter that had a defect
        friendly_name: 'Gesamtproduktion PV'
        unit_of_measurement: 'kWh'
        icon_template: mdi:counter
      el_leistung_verbrauch_gesamt:
        value_template: >-
          {% if is_state('binary_sensor.ping_wechselrichter_pv','on') %}
            {{ -1*states('sensor.power_load_fronius_power_flow_0_192_168_178_28') | float(0) }}
          {% else %}
            {{ -1*states('sensor.el_leistung_stromzaehler_netzbezug') | float(0) }}
          {% endif %}
        friendly_name: 'El. Leistung Verbrauch gesamt'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
#      battery_sim_energy_saved_byd_hvm_11_0:
#        value_template: "{{ state_attr('sensor.byd_hvm_11_0', 'energy_saved') | float(0) }}"
#        friendly_name: 'Batterie-Sim BYD HVM 11_0 Energy Saved'
#        unit_of_measurement: 'kWh'
#        icon_template: mdi:counter
#
#
#       --------------------------------
#       --   effektiver Strompreis    --
#       --------------------------------
#
      einspeiselimit_watt:
        value_template: "{{ (states('input_number.pv_einspeisebegrenzung_prozent') | float(0) ) * (states('input_number.pv_installierte_peakleistung') | float(0) ) * 0.01 }}"
#        value_template: "{{ 30 }}"
        friendly_name: 'El. Leistung Einspeiselimit'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      anteil_el_leistung_netzbezug:
        value_template: >-
          {% if (states('sensor.el_leistung_netz') | float(0)) > 0 %}
            {{ (states('sensor.el_leistung_netz') | float(0)) / (states('sensor.el_leistung_verbrauch_gesamt') | float(1)) }}
          {% else %}
            0.0
          {% endif %}
        friendly_name: 'El. Leistung Anteil Netzbezug'
        unit_of_measurement: 'Anteil'
        icon_template: mdi:chart-donut
      anteil_el_leistung_pv_nicht_einspeisbar:
        value_template: >-
          {% if (states('sensor.el_leistung_pv_ac') | float(0)) > ((states('sensor.einspeiselimit_watt') | float(0)) + (states('sensor.el_leistung_verbrauch_gesamt') | float(0))) %}
            1.0
          {% elif (states('sensor.el_leistung_pv_ac') | float(0)) > (states('sensor.einspeiselimit_watt') | float(0)) %}
            {{ ((states('sensor.el_leistung_pv_ac') | float(0)) - (states('sensor.einspeiselimit_watt') | float(0))) / (states('sensor.el_leistung_verbrauch_gesamt') | float(1)) }}
          {% else %}
            0.0
          {% endif %}
        friendly_name: 'El. Leistung Anteil PV nicht einspeisbar'
        unit_of_measurement: 'Anteil'
        icon_template: mdi:chart-donut
      anteil_el_leistung_pv_einspeisbar:
        value_template: "{{ 1 - (states('sensor.anteil_el_leistung_netzbezug') | float(0) ) - (states('sensor.anteil_el_leistung_pv_nicht_einspeisbar') | float(0) ) }}"
        friendly_name: 'El. Leistung Anteil PV einspeisbar'
        unit_of_measurement: 'Anteil'
        icon_template: mdi:chart-donut
      strompreis_aktuell_effektiv_euro:
        value_template: "{{ (states('input_number.strompreis') | float(0) ) * (states('sensor.anteil_el_leistung_netzbezug') | float(0) ) + (states('input_number.pv_einspeiseverguetung') | float(0) ) * (states('sensor.anteil_el_leistung_pv_einspeisbar') | float(0) ) }}"
        friendly_name: 'Strompreis aktuell effektiv Euro'
        unit_of_measurement: '€'
        icon_template: mdi:currency-eur
      strompreis_aktuell_abrechnung_euro:
        value_template: "{{ (states('input_number.strompreis') | float(0) ) * (states('sensor.anteil_el_leistung_netzbezug') | float(0) ) }}"
        friendly_name: 'Strompreis aktuell Abrechnung Euro'
        unit_of_measurement: '€'
        icon_template: mdi:currency-eur
      strompreis_aktuell_effektiv_cent:
        value_template: "{{ ((states('sensor.strompreis_aktuell_effektiv_euro') | float(0)) * 100) | round(0) }}"
        friendly_name: 'Strompreis aktuell effektiv Cent'
        unit_of_measurement: 'ct'
        icon_template: mdi:currency-eur
#
#       --------------------------------
#       --           Licht            --
#       --------------------------------
#
      el_leistung_berechnet_licht_zigbee_licht_gaestezimmer:
        value_template: "{{ '%.1f'%(state_attr('light.innr_e14_ww_decke_gastezimmer_level_on_off', 'brightness') | float(0) / 255 * 5.3)| float(0) }}"
        friendly_name: 'El. Leistung Licht Gästezimmer (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_zigbee_stehlampe_le:
        value_template: "{{ '%.1f'%(state_attr('light.innr_e14_tw_stehlampe_lea_level_light_color_on_off', 'brightness') | float(0) / 255 * 5.8)| float(0) }}"
        friendly_name: 'El. Leistung Stehlampe Le (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_zigbee_stehlampe_la:
        value_template: "{{ '%.1f'%(state_attr('light.innr_e14_ww_stehlampe_lara_level_on_off', 'brightness') | float(0) / 255 * 5.3)| float(0) }}"
        friendly_name: 'El. Leistung Stehlampe La (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_zigbee_kugellampe_sz:
        value_template: "{{ '%.1f'%(state_attr('light.innr_e14_tw_kugellampe_schlafzimmer_level_light_color_on_off', 'brightness') | float(0) / 255 * 5.8)| float(0) }}"
        friendly_name: 'El. Leistung Kugellampe SZ (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_zigbee_terrasse_ecke_gr:
        value_template: "{{ '%.1f'%(state_attr('light.innr_e27_color_terrasse_ecke_gross_level_light_color_on_off', 'brightness') | float(0) / 255 * 9.5)| float(0) }}"
        friendly_name: 'El. Leistung Würfel Terrasse Ecke groß (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_zigbee_terrasse_ecke_kl:
        value_template: "{{ '%.1f'%(state_attr('light.innr_rb_285_c_55f50405_level_light_color_on_off', 'brightness') | float(0) / 255 * 9.5)| float(0) }}"
        friendly_name: 'El. Leistung Würfel Terrasse Ecke klein (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_zigbee_terrasse_feuerstelle:
        value_template: "{{ '%.1f'%(state_attr('light.innr_rb_285_c_7cc30105_level_light_color_on_off', 'brightness') | float(0) / 255 * 9.5)| float(0) }}"
        friendly_name: 'El. Leistung Würfel Terrasse Feuerstelle (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_flur_keller:
        value_template: "{{ is_state('light.flur_keller','on') | float(0) * 20 }}"
        friendly_name: 'El. Leistung Licht Flur Keller (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_technikraum:
        value_template: "{{ is_state('light.technikraum','on') | float(0) * 20 }}"
        friendly_name: 'El. Leistung Licht Technikraum (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_vorratsraum:
        value_template: "{{ is_state('light.vorratsraum','on') | float(0) * 20 }}"
        friendly_name: 'El. Leistung Licht Vorratsraum (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_werkelraum:
        value_template: "{{ is_state('light.werkelraum','on') | float(0) * 60 }}"
        friendly_name: 'El. Leistung Licht Werkelraum (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_partyraum:
        value_template: "{{ is_state('light.lagerraum','on') | float(0) * 22 }}"
        friendly_name: 'El. Leistung Licht Partyraum (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_spots_carport:
        value_template: "{{ is_state('light.spots_carport','on') | float(0) * 25 }}"
        friendly_name: 'El. Leistung Spots Carport (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_wandwuerfel_sued:
        value_template: "{{ is_state('light.wandwurfel_suden','on') | float(0) * 21 }}"
        friendly_name: 'El. Leistung Wandwürfel Süd (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_wandwuerfel_west:
        value_template: "{{ is_state('light.wandwurfel_westen','on') | float(0) * 21 }}"
        friendly_name: 'El. Leistung Wandwürfel West (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_abstellraum:
        value_template: "{{ is_state('light.abstellraum_carport','on') | float(0) * 24 }}"
        friendly_name: 'El. Leistung Licht Abstellraum CP (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_naehtisch_nz:
        value_template: "{{ '%.1f'%(state_attr('light.ikea_panel_arbeitszimmer_esphome', 'brightness') | float(0) / 255 * 29)| float(0) }}"
        friendly_name: 'El. Leistung Licht Decke Ma (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_schreibtisch_nz:
        value_template: "{{ is_state('light.schreibtisch_decke','on') | float(0) * 24 }}"
        friendly_name: 'El. Leistung Licht Decke Jo (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_spiegel_bad_eg:
        value_template: "{{ is_state('light.spiegel_bad_eg','on') | float(0) * 11.5 }}"
        friendly_name: 'El. Leistung Spiegel Bad EG (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_spiegel_bad_og:
        value_template: "{{ is_state('light.spiegel_bad_og','on') | float(0) * 11.5 }}"
        friendly_name: 'El. Leistung Spiegel Bad OG (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnet_licht_spiegel_wc:
        value_template: "{{ is_state('light.spiegel_wc','on') | float(0) * 20 }}"
        friendly_name: 'El. Leistung Spiegel WC (berechnet)'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_licht_sicherung_3_2:
        value_template: >-
          {% if states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) == 0 %}
            0.0
          {% elif states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) < 8 %}
            {{ states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) * (0.28 + 0.01) }}
          {% elif states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) < 15 %}
            {{ states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) * (states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) * (-0.017821) + 0.424589 + 0.01) }}
          {% elif states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) < 20 %}
            {{ states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) * (states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) * (-0.003710) + 0.169098 + 0.01) }}
          {% elif states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) < 120 %}
            {{ states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) * (states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) * 0.005517 + 0.090330 + 0.01) }}
          {% else %}
            {{ states('sensor.el_leistung_licht_sicherung_3_2_scheinleistung') | float(0) * (0.8 + 0.01) }}
          {% endif %}
        friendly_name: 'El. Leistung Licht Sicherung 3.2'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_licht_sicherung_3_3:
        value_template: >-
          {% if states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) == 0 %}
            0.0
          {% elif states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) < 35 %}
            {{ states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) * (states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) * 0.003962 + 0.053906 + 0.01) }}
          {% elif states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) < 100 %}
            {{ states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) * (states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) * 0.003834 + 0.180579 + 0.01) }}
          {% elif states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) < 300 %}
            {{ states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) * (states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) * 0.001312 + 0.406724 + 0.01) }}
          {% else %}
            {{ states('sensor.el_leistung_licht_sicherung_3_3_scheinleistung') | float(0) * (0.8 + 0.01) }}
          {% endif %}
        friendly_name: 'El. Leistung Licht Sicherung 3.3'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_berechnete_lichter:
        value_template: >-
          {{ states('sensor.el_leistung_berechnet_licht_zigbee_licht_gaestezimmer') | float(0)
           + states('sensor.el_leistung_berechnet_licht_zigbee_stehlampe_le') | float(0)
           + states('sensor.el_leistung_berechnet_licht_zigbee_stehlampe_la') | float(0)
           + states('sensor.el_leistung_berechnet_licht_zigbee_kugellampe_sz') | float(0)
           + states('sensor.el_leistung_berechnet_licht_zigbee_terrasse_ecke_gr') | float(0)
           + states('sensor.el_leistung_berechnet_licht_zigbee_terrasse_ecke_kl') | float(0)
           + states('sensor.el_leistung_berechnet_licht_zigbee_terrasse_feuerstelle') | float(0)
           + states('sensor.el_leistung_berechnet_licht_flur_keller') | float(0)
           + states('sensor.el_leistung_berechnet_licht_technikraum') | float(0)
           + states('sensor.el_leistung_berechnet_licht_vorratsraum') | float(0)
           + states('sensor.el_leistung_berechnet_licht_werkelraum') | float(0)
           + states('sensor.el_leistung_berechnet_licht_partyraum') | float(0)
           + states('sensor.el_leistung_berechnet_licht_spots_carport') | float(0)
           + states('sensor.el_leistung_berechnet_licht_wandwuerfel_sued') | float(0)
           + states('sensor.el_leistung_berechnet_licht_wandwuerfel_west') | float(0)
           + states('sensor.el_leistung_berechnet_licht_abstellraum') | float(0)
           + states('sensor.el_leistung_berechnet_licht_naehtisch_nz') | float(0)
           + states('sensor.el_leistung_berechnet_licht_schreibtisch_nz') | float(0)
           + states('sensor.el_leistung_berechnet_licht_spiegel_bad_eg') | float(0)
           + states('sensor.el_leistung_berechnet_licht_spiegel_bad_og') | float(0)
           + states('sensor.el_leistung_berechnet_licht_spiegel_wc') | float(0) }}
        friendly_name: 'El. Leistung berechnete Lichter'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_licht_gesamt:
        value_template: >-
          {{ states('sensor.el_leistung_berechnete_lichter') | float(0) 
           + states('sensor.el_leistung_licht_sicherung_3_2') | float(0)
           + states('sensor.el_leistung_licht_sicherung_3_3') | float(0)
           + states('sensor.el_leistung_shellydimmer_d472fe_power') | float(0) }}
        friendly_name: 'El. Leistung Licht gesamt'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
#
#       --------------------------------
#       --          Geräte            --
#       --------------------------------
#
      el_leistung_kochfeld:
        friendly_name: 'El. Leistung Kochfeld'
        value_template: "{{ states('sensor.el_leistung_kochfeld_esp') }}"
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_dauerverbraucher:
        # Werte:
            # USV:                          63 (gemessen)
            #     - Fritzbox
            #     - Kabel-Modem
            #     - Repeater Keller
            #     - Switch
            #     - KNX
            # Wasserabsperrhahn              0.5 (gemessen)
            # Onewirepi                      2   (1 gemessen)
            # Odroidxu4                      4.5 (gemessen)
            # Odroidxu4 Platte               5   (gemessen)
            # repeater wz                    4   (online-Test)
            # Raspi Bilderrahmen             2   (wie Onewirepi)
            # Klingel                        5   (geschätzt)
            # Kodi                           3   (gemessen)
            # Kodi-Platte                    2   (gemessen. Standby 1-2W, Betrieb 9W)
            # Relais Sicherung Keller        1   (geschätzt)
            # Telefon                        1   (<1 gemessen bzw nicht messbar)
            # Drucker                        1.5 (an, gemessen)
            # Switch NZ                      1.5 (online-Test)
            # Radio Lea                      2   (geschätzt)
            # Enthärtungsanlage              3   (geschätzt)
            # Robbi                          1   (geschätzt)
            # Digibit                        8   (zwischen 6 und 9 gemessen)
            # Ikea Panel Arbeitszimmer       1.5 (Datenblatt 0.5 + ESP32 geschätzt)
            # Sonos One Theke                3.5 (https://support.sonos.com/s/article/256?language=de)
            # Sonos Move                     3.5 (https://support.sonos.com/s/article/256?language=de)
            # Sonos Beam                     6.5 (https://support.sonos.com/s/article/256?language=de)
            # WLAN-Steckdose esphome         3   (3 x 1 W geschätzt - Bildschirm, 2x Heizung Partyraum)
            # Zigbee-Steckdosen              2   (4 x 0.5 - Luftentfeuchter Waschk. + Partyraum, 2x Zigbee-Repeater)
            # Zigbee-Lampen                  4   (ca. 10 x 0.4)
            # Shelly Dimmer                  1
            # Shelly Schalter Bett-SD        1
            # Shelly Steckdose               1
            # ESP-Sensoren                   5   (ca 5 x 1 W)
            # Netzteil Laptop Ma             1   (geschätzt)
            # Netzteil Laptop Jo             1   (geschätzt)
            # Netzteil Laptop MaJo           1   (geschätzt)
            # Standyby Monitor               3   (3 x 1 geschätzt)
            # Modbus Gateway Lueftungsanl.   1   (Datenblatt)
            # Wechselrichter Froinus Gen24  10   (Datenblatt)
        value_template: "{{ (now().hour | float(0) / 1000000) + 63 + 0.5 + 2 + 4.5 + 5 + 4 + 2 + 5 + 3 + 2 + 1 + 1 + 1.5 + 1.5 + 2 + 3 + 1 + 8 + 1.5 + 3.5 + 3.5 + 6.5 + 3 + 2 + 4 + 1 + 1 + 1 + 5 + 1 + 1 + 1 + 3 + 1 + 10 }}"
        friendly_name: 'El. Leistung Dauerverbraucher'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_luftentf_vorratsraum:
        value_template: >-
          {% if states('sensor.el_leistung_kuhlschrank_keller') | float(0) < 1 %}
            0.0
          {% elif states('sensor.el_leistung_kuhlschrank_keller') | float(0) < 100 %}
            {{ '%.1f'%(states('sensor.el_leistung_kuhlschrank_keller') | float(0) * 0.53) }}
          {% else %}
            {{ '%.1f'%(states('sensor.el_leistung_kuhlschrank_keller') | float(0) * 0.656) }}
          {% endif %}
        friendly_name: 'El. Leistung Luftentf. Vorratsraum'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_waschmaschine:
        value_template: >-
          {% if states('sensor.el_leistung_waschmaschine_scheinleistung') | float(0) < 15 %}
            0.4
          {% elif states('sensor.el_leistung_waschmaschine_scheinleistung') | float(0) < 360 %}
            {{ '%.1f'%(states('sensor.el_leistung_waschmaschine_scheinleistung') | float(0) * (states('sensor.el_leistung_waschmaschine_scheinleistung') | float(0) * 0.000688 + 0.561576)) }}
          {% elif states('sensor.el_leistung_waschmaschine_scheinleistung') | float(0) < 1000 %}
            {{ '%.1f'%(states('sensor.el_leistung_waschmaschine_scheinleistung') | float(0) * 0.81) }}
          {% else %}
            {{ '%.1f'%(states('sensor.el_leistung_waschmaschine_scheinleistung') | float(0) * 1) }}
          {% endif %}
        friendly_name: 'El. Leistung Waschmaschine'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_trockner:
        value_template: >-
          {% if states('sensor.el_leistung_trockner_scheinleistung') | float(0) < 6 %}
            0.0
          {% elif states('sensor.el_leistung_trockner_scheinleistung') | float(0) < 9 %}
            {{ '%.1f'%(states('sensor.el_leistung_trockner_scheinleistung') | float(0) * (states('sensor.el_leistung_trockner_scheinleistung') | float(0) * (-0.008991) + 0.072442)) }}
          {% elif states('sensor.el_leistung_trockner_scheinleistung') | float(0) < 10 %}
            {{ '%.1f'%(states('sensor.el_leistung_trockner_scheinleistung') | float(0) * 0.15) }}
          {% else %}
            {{ '%.1f'%(states('sensor.el_leistung_trockner_scheinleistung') | float(0) * 1) }}
          {% endif %}
        friendly_name: 'El. Leistung Trockner'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_gefrierschrank:
        value_template: >-
          {% if states('sensor.el_leistung_gefrierschrank_scheinleistung') | float(0) < 22 %}
            {{ '%.1f'%(states('sensor.el_leistung_gefrierschrank_scheinleistung') | float(0) * 0.064) }}
          {% elif states('sensor.el_leistung_gefrierschrank_scheinleistung') | float(0) < 80 %}
            {{ '%.1f'%(states('sensor.el_leistung_gefrierschrank_scheinleistung') | float(0) * 0.73) }}
          {% else %}
            {{ '%.1f'%(states('sensor.el_leistung_gefrierschrank_scheinleistung') | float(0) * 0.82) }}
          {% endif %}
        friendly_name: 'El. Leistung Gefrierschrank'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_kuhlschrank_kuche:
        value_template: >-
          {% if states('sensor.el_leistung_kuhlschrank_kuche_scheinleistung') | float(0) < 10 %}
            0.0
          {% elif states('sensor.el_leistung_kuhlschrank_kuche_scheinleistung') | float(0) < 20 %}
            {{ '%.1f'%(states('sensor.el_leistung_kuhlschrank_kuche_scheinleistung') | float(0) * 0.95) }}
          {% else %}
            {{ '%.1f'%(states('sensor.el_leistung_kuhlschrank_kuche_scheinleistung') | float(0) * 0.75) }}
          {% endif %}
        friendly_name: 'El. Leistung Kühlschrank Küche'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_spulmaschine:
        value_template: >-
          {% if states('sensor.el_leistung_spulmaschine_scheinleistung') | float(0) < 6 %}
            0.0
          {% elif states('sensor.el_leistung_spulmaschine_scheinleistung') | float(0) < 8 %}
            {{ '%.1f'%(states('sensor.el_leistung_spulmaschine_scheinleistung') | float(0) * 0.2) }}
          {% elif states('sensor.el_leistung_spulmaschine_scheinleistung') | float(0) < 20 %}
            {{ '%.1f'%(states('sensor.el_leistung_spulmaschine_scheinleistung') | float(0) * 1.0) }}
          {% elif states('sensor.el_leistung_spulmaschine_scheinleistung') | float(0) < 60 %}
            {{ '%.1f'%(states('sensor.el_leistung_spulmaschine_scheinleistung') | float(0) * 0.55) }}
          {% elif states('sensor.el_leistung_spulmaschine_scheinleistung') | float(0) < 200 %}
            {{ '%.1f'%(states('sensor.el_leistung_spulmaschine_scheinleistung') | float(0) * 0.81) }}
          {% else %}
            {{ '%.1f'%(states('sensor.el_leistung_spulmaschine_scheinleistung') | float(0) * 1.0) }}
          {% endif %}
        friendly_name: 'El. Leistung Spülmaschine'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_tv:
        value_template: >-
          {% if states('sensor.el_leistung_tv_scheinleistung') | float(0) == 0 %}
            0.0
          {% elif states('sensor.el_leistung_tv_scheinleistung') | float(0) < 15 %}
            0.3
          {% elif states('sensor.el_leistung_tv_scheinleistung') | float(0) < 30 %}
            {{ '%.1f'%(states('sensor.el_leistung_tv_scheinleistung') | float(0) * 0.5) }}
          {% elif states('sensor.el_leistung_tv_scheinleistung') | float(0) < 70 %}
            {{ '%.1f'%(states('sensor.el_leistung_tv_scheinleistung') | float(0) * 0.815) }}
          {% else %}
            {{ '%.1f'%(states('sensor.el_leistung_tv_scheinleistung') | float(0) * 0.855) }}
          {% endif %}
        friendly_name: 'El. Leistung TV'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_bildschirm_theke:
        friendly_name: "El. Leistung Bildschirm Theke"
        value_template: >-
          {{ states("sensor.el_leistung_esp_sd_3") }}
      el_leistung_lg_anlage:
        friendly_name: "El. Leistung LG Anlage"
        value_template: >-
          {% if is_state('binary_sensor.tv_ist_an', 'on') %}
            13.5
          {% else %}
            0.5
          {% endif %}
#
#       --------------------------------
#       --         Heizung            --
#       --------------------------------
#
      el_leistung_wp_aussenteil:
        friendly_name: 'El. Leistung WP Aussenteil'
        value_template: "{{ states('sensor.el_leistung_wp_aussenteil_esp') }}"
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_wp_innenteil:
        friendly_name: 'El. Leistung WP Innenteil'
        value_template: "{{ states('sensor.el_leistung_wp_innenteil_esp') }}"
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_wp_heizstab:
        friendly_name: 'El. Leistung WP Heizstab'
        value_template: "{{ states('sensor.el_leistung_wp_heizstab_esp') }}"
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      el_leistung_wp_gesamt:
        value_template: >-
          {{ states('sensor.el_leistung_wp_aussenteil_esp') | float(0) 
           + states('sensor.el_leistung_wp_heizstab_esp') | float(0)
           + states('sensor.el_leistung_wp_innenteil_esp') | float(0) }}
        friendly_name: 'El. Leistung WP gesamt'
        unit_of_measurement: 'W'
        icon_template: mdi:speedometer
      # max Stellwert Heizkreise Zeitverlauf
      stellwert_heizung_zeitverlauf_max:
        friendly_name: "Stellwert Heizung Zeitverlauf Max"
        value_template: "{{ state_attr('sensor.stellwert_heizung_zeitverlauf_mean', 'max_value') }}"
        unit_of_measurement: '%'
      # Heizung
      heating_room_target_temp:
        friendly_name: "Heizung Zieltemperatur Raum"
        value_template: "{{ state_attr('climate.hc1', 'temperature') }}"
        unit_of_measurement: '°C'
        device_class: temperature
      # Warmwasser
      water_heater_target_temp:
        friendly_name: "Warmwasser Zieltemperatur"
        value_template: "{{ state_attr('water_heater.dhw1', 'temperature') }}"
        unit_of_measurement: '°C'
        device_class: temperature
      water_heater_current_temp:
        friendly_name: "Warmwasser aktuelle Temperatur"
        value_template: "{{ state_attr('water_heater.dhw1', 'current_temperature') }}"
        unit_of_measurement: '°C'
        device_class: temperature
#
#   --------------------------------
#   --         Sonstiges          --
#   --------------------------------
#
      target_temp_kuehlbox:
        friendly_name: 'Zieltemperatur Kühlbox'
        unit_of_measurement: '°C'
        value_template: "{{ states('input_number.target_temp_kuehlbox') | float(0) }}"
#
#
# --------------------------------
# --                            --
# --          PowerCalc         --
# --                            --
# --------------------------------
#
#
#
#   --------------------------------
#   --     Sonoff POW R2 1        --
#   --------------------------------
#
  - platform: mqtt
    name: "Sonoff POW R2 1 Scheinleistung"
    state_topic: "tele/tasmota_pow_r2_1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["ApparentPower"] }}'
    unit_of_measurement: "VA"
  - platform: mqtt
    name: "Sonoff POW R2 1 Wirkleistung"
    state_topic: "tele/tasmota_pow_r2_1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "Sonoff POW R2 1 Leistungsfaktor"
    state_topic: "tele/tasmota_pow_r2_1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Factor"] }}'
    unit_of_measurement: "None"
  - platform: mqtt
    name: "Sonoff POW R2 1 Energie"
    state_topic: "tele/tasmota_pow_r2_1/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
#
#   --------------------------------
#   --     Sonoff POW R2 2        --
#   --------------------------------
#
  - platform: mqtt
    name: "Sonoff POW R2 2 Scheinleistung"
    state_topic: "tele/tasmota_pow_r2_2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["ApparentPower"] }}'
    unit_of_measurement: "VA"
  - platform: mqtt
    name: "Sonoff POW R2 2 Wirkleistung"
    state_topic: "tele/tasmota_pow_r2_2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "Sonoff POW R2 2 Leistungsfaktor"
    state_topic: "tele/tasmota_pow_r2_2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Factor"] }}'
    unit_of_measurement: "None"
  - platform: mqtt
    name: "Sonoff POW R2 2 Energie"
    state_topic: "tele/tasmota_pow_r2_2/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
#
#
# --------------------------------
# --                            --
# --        Integration         --
# --                            --
# --------------------------------
#
  - platform: integration
    source: sensor.power_photovoltaics_fronius_power_flow_0_192_168_178_28
    name: pv_ac_energy_riemann
    unit_prefix: k
    round: 2
    method: left
#
# --------------------------------
# --                            --
# --           History          --
# --                            --
# --------------------------------
#
  - platform: history_stats
    name: Jo at work
    entity_id: binary_sensor.jo_at_work
    state: "on"
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'
  - platform: history_stats
    name: Anteil La wach letzte Stunde
    entity_id: switch.la_schlaft
    state: 'off'
    type: ratio
    end: '{{ now() }}'
    duration:
      hours: 1
  - platform: history_stats
    name: Anteil Le wach letzte Stunde
    entity_id: switch.le_schlaft
    state: 'off'
    type: ratio
    end: '{{ now() }}'
    duration:
      hours: 1
  - platform: history_stats
    name: Anteil MaJo wach letzte Stunde
    entity_id: switch.majo_schlafen
    state: 'off'
    type: ratio
    end: '{{ now() }}'
    duration:
      hours: 1
  - platform: history_stats
    name: Anteil Kinder wach letzte Stunde
    entity_id: binary_sensor.la_oder_le_schlafen
    state: 'off'
    type: ratio
    end: '{{ now() }}'
    duration:
      hours: 1

#
# --------------------------------
# --                            --
# --         Min / Max          --
# --                            --
# --------------------------------
#
  - platform: min_max
    type: max
    name: Stellwert Heizung aktueller MaxWert
    entity_ids:
      - sensor.stellwert_heizung_bad_eg
      - sensor.stellwert_heizung_bad_og
      - sensor.stellwert_heizung_esszimmer
      - sensor.stellwert_heizung_flur_og
      - sensor.stellwert_heizung_gastezimmer
      - sensor.stellwert_heizung_kuche
      - sensor.stellwert_heizung_la
      - sensor.stellwert_heizung_le
      - sensor.stellwert_heizung_nahzimmer
      - sensor.stellwert_heizung_schlafzimmer
      - sensor.stellwert_heizung_windfang_wc
      - sensor.stellwert_heizung_wohnzimmer
#
# --------------------------------
# --                            --
# --  Statistics  and filter    --
# --                            --
# --------------------------------
#
  - platform: statistics
    name: Stellwert Heizung Zeitverlauf Mean
    entity_id: sensor.stellwert_heizung_aktueller_maxwert
    sampling_size: 2000
    state_characteristic: mean
    max_age:
      minutes: 30
  - platform: statistics
    name: PV Einspeisung letzte 3 Min Durchschnitt
    entity_id: sensor.el_leistung_einspeisung
    sampling_size: 40
    state_characteristic: average_step
    max_age:
      minutes: 3
#
# --------------------------------
# --                            --
# --       Time / Date          --
# --                            --
# --------------------------------
#
  - platform: time_date
    display_options:
      - 'time'
      - 'date'

#
# --------------------------------
# --                            --
# --        Stromzähler         --
# --                            --
# --------------------------------
#
  - platform: edl21
    name: Stromzähler
    serial_port: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AR0JH225-if00-port0
#
# --------------------------------
# --                            --
# --          solcast           --
# --                            --
# --------------------------------
#
  - platform: rest
    resource: !secret solcast_url
    value_template: '{{ value_json.forecasts.0.pv_estimate }}'
    json_attributes:
      - "forecasts"
    name: 'solcast forecast REST'
    unit_of_measurement: "kW"
    scan_interval: 3600
#
# --------------------------------
# --                            --
# --    Fully Kiosk Browser     --
# --                            --
# --------------------------------
#
  - platform: rest
    name: Kiosk Browser Bildschirm Theke
    resource: 'http://192.168.178.42:2323/?cmd=deviceInfo&type=json&password=nopw'
    json_attributes:
    - screenBrightness
    - screenOn
    - ip4
    - ip6
    - deviceId
    value_template: 'OK'
  - platform: rest
    name: Geburtstage Google 0 Name
    resource_template: 'http://localhost:8123/api/calendars/calendar.geburtstage_und_jahrestag?start={{ utcnow().strftime("%Y-%m-%dT%H:%M:%S") }}Z&end={{ (utcnow() + timedelta(days = 31)).strftime("%Y-%m-%dT%H:%M:%S") }}Z'
    headers:
      Authorization: !secret calendar_api_token
    value_template: "{{ value_json[0].summary }}"
    json_attributes:
      - 0
      - 1
      - 2
      - 3
    scan_interval: 180
  - platform: rest
    name: Geburtstage Google 1 Name
    resource_template: 'http://localhost:8123/api/calendars/calendar.geburtstage_und_jahrestag?start={{ utcnow().strftime("%Y-%m-%dT%H:%M:%S") }}Z&end={{ (utcnow() + timedelta(days = 31)).strftime("%Y-%m-%dT%H:%M:%S") }}Z'
    headers:
      Authorization: !secret calendar_api_token
    value_template: "{{ value_json[1].summary }}"
    json_attributes:
      - [0]
      - [1]
      - [2]
      - [3]
    scan_interval: 180
  - platform: rest
    name: Geburtstage Google 2 Name
    resource_template: 'http://localhost:8123/api/calendars/calendar.geburtstage_und_jahrestag?start={{ utcnow().strftime("%Y-%m-%dT%H:%M:%S") }}Z&end={{ (utcnow() + timedelta(days = 31)).strftime("%Y-%m-%dT%H:%M:%S") }}Z'
    headers:
      Authorization: !secret calendar_api_token
    value_template: "{{ value_json[2].summary }}"
    scan_interval: 180
  - platform: rest
    name: Geburtstage Google 3 Name
    resource_template: 'http://localhost:8123/api/calendars/calendar.geburtstage_und_jahrestag?start={{ utcnow().strftime("%Y-%m-%dT%H:%M:%S") }}Z&end={{ (utcnow() + timedelta(days = 31)).strftime("%Y-%m-%dT%H:%M:%S") }}Z'
    headers:
      Authorization: !secret calendar_api_token
    value_template: "{{ value_json[3].summary }}"
    scan_interval: 180
  - platform: rest
    name: Geburtstage Google 0 Datum
    resource_template: 'http://localhost:8123/api/calendars/calendar.geburtstage_und_jahrestag?start={{ utcnow().strftime("%Y-%m-%dT%H:%M:%S") }}Z&end={{ (utcnow() + timedelta(days = 31)).strftime("%Y-%m-%dT%H:%M:%S") }}Z'
    headers:
      Authorization: !secret calendar_api_token
    value_template: "{{ value_json[0].start.date }}"
    scan_interval: 180
  - platform: rest
    name: Geburtstage Google 1 Datum
    resource_template: 'http://localhost:8123/api/calendars/calendar.geburtstage_und_jahrestag?start={{ utcnow().strftime("%Y-%m-%dT%H:%M:%S") }}Z&end={{ (utcnow() + timedelta(days = 31)).strftime("%Y-%m-%dT%H:%M:%S") }}Z'
    headers:
      Authorization: !secret calendar_api_token
    value_template: "{{ value_json[1].start.date }}"
    scan_interval: 180
  - platform: rest
    name: Geburtstage Google 2 Datum
    resource_template: 'http://localhost:8123/api/calendars/calendar.geburtstage_und_jahrestag?start={{ utcnow().strftime("%Y-%m-%dT%H:%M:%S") }}Z&end={{ (utcnow() + timedelta(days = 31)).strftime("%Y-%m-%dT%H:%M:%S") }}Z'
    headers:
      Authorization: !secret calendar_api_token
    value_template: "{{ value_json[2].start.date }}"
    scan_interval: 180
  - platform: rest
    name: Geburtstage Google 3 Datum
    resource_template: 'http://localhost:8123/api/calendars/calendar.geburtstage_und_jahrestag?start={{ utcnow().strftime("%Y-%m-%dT%H:%M:%S") }}Z&end={{ (utcnow() + timedelta(days = 31)).strftime("%Y-%m-%dT%H:%M:%S") }}Z'
    headers:
      Authorization: !secret calendar_api_token
    value_template: "{{ value_json[3].start.date }}"
    scan_interval: 180
#
# --------------------------------
# --                            --
# --           Server           --
# --                            --
# --------------------------------
#
  - platform: systemmonitor
    resources:
      - type: processor_use
      - type: disk_use_percent
        arg: "/"
      - type: last_boot
      - type: memory_use_percent
  - platform: command_line
    name: CPU Temperatur
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'