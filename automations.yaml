###############################################
#####    KNX rel. dimming Stehlampe WZ    #####
###############################################
- alias: KNX relative dimming Stehlampe WZ
  id: 'knx_relative_dimming_stehlampe_wz'
  description: ''
  use_blueprint:
    path: /config/blueprints/knx_relative_dimming_farmio.yaml
    input:
      target_lights:
        entity_id: light.0x00158d000502f589
      switch_address: '1/6/80'
      dimm_address: '1/6/82'
      dimm_time: 5
      dimm_steps: 10
#
###############################################
#####    KNX rel. dimming Kugellampe SZ   #####
###############################################
- alias: KNX relative dimming Kugellampe SZ
  id: 'knx_relative_dimming_kugellampe_sz'
  description: ''
  use_blueprint:
    path: /config/blueprints/knx_relative_dimming_farmio.yaml
    input:
      target_lights:
        entity_id: light.0x680ae2fffee9df98
      switch_address: '1/6/200'
      dimm_address: '1/6/202'
      dimm_time: 5
      dimm_steps: 10
#
###############################################
#####   KNX rel. dimming Stehlampe Lea    #####
###############################################
- alias: KNX relative dimming Stehlampe Lea
  id: 'knx_relative_dimming_stehlampe_lea'
  description: ''
  use_blueprint:
    path: /config/blueprints/knx_relative_dimming_farmio.yaml
    input:
      target_lights:
        entity_id: light.0x680ae2fffeeb9221
      switch_address: '1/6/0'
      dimm_address: '1/6/2'
      dimm_time: 5
      dimm_steps: 10
#
###############################################
#####   KNX rel. dimming Stehlampe Lara   #####
###############################################
- alias: KNX relative dimming Stehlampe Lara
  id: 'knx_relative_dimming_stehlampe_lara'
  description: ''
  use_blueprint:
    path: /config/blueprints/knx_relative_dimming_farmio.yaml
    input:
      target_lights:
        entity_id: light.0x00158d000344670b
      switch_address: '1/5/200'
      dimm_address: '1/5/202'
      dimm_time: 5
      dimm_steps: 10
#
###############################################
#####    KNX relative dimming Panel AZ    #####
###############################################
- alias: KNX relative dimming Panel Arbeitszimmer
  id: 'knx_relative_dimming_panel_arbeitszimmer'
  description: ''
  use_blueprint:
    path: /config/blueprints/knx_relative_dimming_farmio.yaml
    input:
      target_lights:
        entity_id: light.ikea_panel_arbeitszimmer_esphome
      switch_address: '1/6/120'
      dimm_address: '1/6/122'
      dimm_time: 5
      dimm_steps: 10
#
###############################################
#####    KNX relative dimming Decke GZ    #####
###############################################
- alias: KNX relative dimming Decke GZ
  id: 'knx_relative_dimming_decke_gz'
  description: ''
  use_blueprint:
    path: /config/blueprints/knx_relative_dimming_farmio.yaml
    input:
      target_lights:
        entity_id: light.0x00158d0003418897
      switch_address: '1/6/40'
      dimm_address: '1/6/42'
      dimm_time: 5
      dimm_steps: 10
#
###############################################
#####           Play on Kodi WZ           #####
###############################################
- id: '1639043665489'
  alias: Play on Kodi WZ
  description: ''
  trigger:
    - platform: event
      event_type: play_on_kodi_wz
      id: play_on_kodi_wz
  condition: []
  action:
    - service: media_player.turn_on
      target:
        entity_id: media_player.samsung_7_series_55
    - service: media_player.play_media
      data:
        media_content_id: '{{ trigger.event.data.filepath }}'
        media_content_type: file
      target:
        entity_id: media_player.kodi_wz_2
    - service: media_player.volume_set
      target:
        entity_id: media_player.beam
      data:
        volume_level: 0.2
  mode: restart
#
###############################################
#####         ZigBee Taster Lara          #####
###############################################
- id: '1640156192211'
  alias: ZigBee Taster Lara
  description: ''
  trigger:
    - platform: state
      entity_id: sensor.0x00158d0006726e97_action
      to: "single"
      id: action_single
    - platform: state
      entity_id: sensor.0x00158d0006726e97_action
      to: "double"
      id: action_double
  condition: []
  action:
    - service: switch.toggle
      target:
        entity_id: switch.la_schlaft
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
  mode: single
#
###############################################
#####         ZigBee Taster Lea           #####
###############################################
- id: '1640156192212'
  alias: ZigBee Taster Lea
  description: ''
  trigger:
    - platform: state
      entity_id: sensor.0x00158d00066f9b9d_action
      to: "single"
      id: action_single
    - platform: state
      entity_id: sensor.0x00158d00066f9b9d_action
      to: "double"
      id: action_double
  condition: []
  action:
    - service: switch.toggle
      target:
        entity_id: switch.le_schlaft
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
  mode: single
#
###############################################
#####         ZigBee Taster Gäste         #####
###############################################
- id: '1640156192213'
  alias: ZigBee Taster Gäste
  description: ''
  trigger:
    - platform: state
      entity_id: sensor.0x00158d00025f2262_action
      to: "single"
      id: action_single
    - platform: state
      entity_id: sensor.0x00158d00025f2262_action
      to: "double"
      id: action_double
  condition: []
  action:
  #  - service: light.turn_on
  #    target:
  #      entity_id: light.panels_schlafzimmer
  #    data:
  #      brightness_pct: 15
    - service: switch.toggle
      target:
        entity_id: switch.gaste_schlafen
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
  mode: single
#
###############################################
#####              Cube WC                #####
###############################################
- id: '08f25ae6-5ade-46ae-b571-7596cc14c01a'
  alias: Cube WC
  description: ''
  trigger:
    - platform: state
      entity_id: sensor.0x00158d00027d4507_action
      to: "shake"
      id: shake
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: shake
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: light.spiegel_wc
              state: 'on'
            sequence:
            - service: light.turn_on
              target:
                entity_id: light.panels_wc
              data:
                brightness_pct: 5
            - service: light.turn_off
              target:
                entity_id: light.spiegel_wc
          - conditions:
            - condition: state
              entity_id: light.spiegel_wc
              state: 'off'
            sequence:
            - service: light.turn_on
              target:
                entity_id: light.panels_wc
              data:
                brightness_pct: 70
            - service: light.turn_on
              target:
                entity_id: light.spiegel_wc
          default: []
      default: []
  mode: single
#
###############################################
#####  Erinnerung Heizung Partyr. vorne   #####
###############################################
- id: '3f8caab8-7874-4d85-a0a6-13a83dd0fcc0'
  alias: Erinnerung Heizung Partyraum vorne lange an
  description: ''
  trigger:
    - platform: numeric_state
      entity_id: sensor.el_leistung_heizung_partyraum_vorne
      above: 100
      for:
        hours: 4
        minutes: 0
        seconds: 0
  condition: []
  action:
    - repeat:
        while:
          - condition: numeric_state
            entity_id: sensor.el_leistung_heizung_partyraum_vorne
            above: 100
        sequence:
          - service: notify.telegram_jo
            data:
              message: Heizung Partyraum vorne ist noch an
          - delay:
              hours: 2
              minutes: 0
              seconds: 0
              milliseconds: 0
  mode: single
#
###############################################
#####  Erinnerung Heizung Partyr. hinten  #####
###############################################
- id: 'e1fa2ab4-17ee-476d-9cde-02c450ad93b9'
  alias: Erinnerung Heizung Partyraum hinten lange an
  description: ''
  trigger:
    - platform: numeric_state
      entity_id: sensor.el_leistung_heizung_partyraum_hinten
      above: 100
      for:
        hours: 4
        minutes: 0
        seconds: 0
  condition: []
  action:
    - repeat:
        while:
          - condition: numeric_state
            entity_id: sensor.el_leistung_heizung_partyraum_hinten
            above: 100
        sequence:
          - service: notify.telegram_jo
            data:
              message: Heizung Partyraum hinten ist noch an
          - delay:
              hours: 2
              minutes: 0
              seconds: 0
              milliseconds: 0
  mode: single
#
###############################################
#####  Erinnerung Batterie Hochzeitsbild  #####
###############################################
- id: '8fc7df48-115a-44a8-ab48-8f8a514563f1'
  alias: Erinnerung Batterie Hochzeitsbild
  description: ''
  trigger:
    - platform: template
      value_template: "{% if states.sensor.esp_wemos_d1_2_wlan_signal.last_updated is defined %}{{ ((as_timestamp(now()) - as_timestamp(states.sensor.esp_wemos_d1_2_wlan_signal.last_updated)) / 3600) > 12 }}{% else %}{{ false }}{% endif %}"
  condition: []
  action:
    - repeat:
        while:
          - condition: template
            value_template: "{% if states.sensor.esp_wemos_d1_2_wlan_signal.last_updated is defined %}{{ ((as_timestamp(now()) - as_timestamp(states.sensor.esp_wemos_d1_2_wlan_signal.last_updated)) / 3600) > 12 }}{% else %}{{ false }}{% endif %}"
        sequence:
          - service: notify.telegram_jo
            data:
              message: Batterie Hochzeitsbild ist leer
          - delay:
              hours: 8
              minutes: 0
              seconds: 0
              milliseconds: 0
  mode: single
#
###############################################
#####       KNX Szenen und Tasten         #####
###############################################
- id: 'f59f075d-d8f6-4b8e-b8e8-23c39b261b5c'
  alias: KNX Szenen und Tasten
  description: ''
  mode: queued
  trigger:
    - platform: event
      event_type: knx_event
      event_data:
        destination: 15/0/50
      id: szene
    - platform: event
      event_type: knx_event
      event_data:
        destination: 0/3/20
      id: poweroutlet_phone_ma
    - platform: event
      event_type: knx_event
      event_data:
        destination: 0/3/40
      id: poweroutlet_phone_jo
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: szene
        sequence:
        - choose:
          - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.data[0] == 0 }}'
            sequence:
            - service: light.turn_on
              target:
                entity_id: light.0x00158d000344670b
              data:
                brightness_pct: 100
          - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.data[0] == 1 }}'
            sequence:
            - service: light.turn_on
              target:
                entity_id: light.0x680ae2fffeeb9221
              data:
                brightness_pct: 100
          - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.data[0] == 4 }}'
            sequence:
            - service: switch.turn_off
              target:
                entity_id: switch.la_schlaft
          - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.data[0] == 5 }}'
            sequence:
            - service: switch.turn_off
              target:
                entity_id: switch.le_schlaft
          - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.data[0] == 21 }}'
            sequence:
            - service: input_button.press
              target:
                entity_id: input_button.lueftung_stoss
          - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.data[0] == 22 }}'
            sequence:
            - service: input_button.press
              target:
                entity_id: input_button.lueftung_auto
          - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.data[0] == 24 }}'
            sequence:
            - choose:
              - conditions:
                - condition: state
                  entity_id: switch.bleib_so_la_licht
                  state: 'off'
                sequence:
                - service: light.turn_off
                  target:
                    entity_id: light.panels_la
                - service: light.turn_off
                  target:
                    entity_id: light.0x00158d000344670b
                - service: light.turn_on
                  target:
                    entity_id: light.wandwurfel_la
                  data:
                    brightness_pct: 2
                - service: switch.turn_on
                  target:
                    entity_id: switch.bleib_so_la_licht
                - delay: 2
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_o_la_panels
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_o_la_stehlampe
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_o_la_wandwuerfel
              - conditions:
                - condition: state
                  entity_id: switch.bleib_so_la_licht
                  state: 'on'
                sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.bleib_so_la_licht
              default: []
          - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.data[0] == 25 }}'
            sequence:
            - choose:
              - conditions:
                - condition: state
                  entity_id: switch.bleib_so_le_licht
                  state: 'off'
                sequence:
                - service: light.turn_off
                  target:
                    entity_id: light.panels_le
                - service: light.turn_off
                  target:
                    entity_id: light.0x680ae2fffeeb9221
                - service: light.turn_on
                  target:
                    entity_id: light.wandwurfel_le
                  data:
                    brightness_pct: 2
                - service: switch.turn_on
                  target:
                    entity_id: switch.bleib_so_le_licht
                - delay: 2
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_o_le_panels
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_o_le_stehlampe
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_o_le_wandwuerfel
              - conditions:
                - condition: state
                  entity_id: switch.bleib_so_le_licht
                  state: 'on'
                sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.bleib_so_le_licht
              default: []
          - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.data[0] == 26 }}'
            sequence:
            - choose:
              - conditions:
                - condition: state
                  entity_id: switch.bleib_so_sz_licht
                  state: 'off'
                sequence:
                - service: light.turn_off
                  target:
                    entity_id: light.panels_schlafzimmer
                - service: light.turn_off
                  target:
                    entity_id: light.0x680ae2fffee9df98
                - service: light.turn_on
                  target:
                    entity_id: light.bettbeleuchtung
                  data:
                    brightness_pct: 3
                - service: switch.turn_on
                  target:
                    entity_id: switch.bleib_so_sz_licht
                - delay: 2
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_e_sz_bettbeleuchtung
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_e_sz_kugellampe
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_e_sz_panels
              - conditions:
                - condition: state
                  entity_id: switch.bleib_so_sz_licht
                  state: 'on'
                sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.bleib_so_sz_licht
              default: []
          - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.data[0] == 27 }}'
            sequence:
            - choose:
              - conditions:
                - condition: state
                  entity_id: switch.bleib_so_wz_licht
                  state: 'off'
                sequence:
                - service: light.turn_off
                  target:
                    entity_id: light.panels_wohnzimmer
                - service: light.turn_off
                  target:
                    entity_id: light.schrankbeleuchtung_wohnzimmer
                - service: light.turn_off
                  target:
                    entity_id: light.0x00158d000502f589
                - service: switch.turn_on
                  target:
                    entity_id: switch.bleib_so_wz_licht
                - delay: 2
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_e_wz_panels
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_e_wz_schraenke
                - service: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.helper_light_manually_switched_off_e_wz_stehlampe
              - conditions:
                - condition: state
                  entity_id: switch.bleib_so_wz_licht
                  state: 'on'
                sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.bleib_so_wz_licht
              default: []
          default: []
      - conditions:
        - condition: trigger
          id: poweroutlet_phone_ma
        sequence:
        - service: switch.toggle
          target:
            entity_id: switch.shellyswitch25_10521c45de0b_relay_0
      - conditions:
        - condition: trigger
          id: poweroutlet_phone_jo
        sequence:
        - service: switch.toggle
          target:
            entity_id: switch.shellyswitch25_10521c45de0b_relay_1
      default: []
#
###############################################
#####         Nachtmodus Bad OG           #####
###############################################
- id: '9dfe5e71-06f3-44f6-944a-c9702203e72b'
  alias: Nachtmodus Bad OG
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: binary_sensor.la_oder_le_schlafen
      id: to_on
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.la_oder_le_schlafen
      id: to_off
      from: "on"
      to: "off"
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: to_off
        sequence:
        - service: switch.turn_off
          target:
            entity_id: switch.bad_og_nachtmodus
      - conditions:
        - condition: trigger
          id: to_on
        sequence:
        - service: switch.turn_on
          target:
            entity_id: switch.bad_og_nachtmodus
      default: []
#
###############################################
#####              Lüftung                #####
###############################################
- id: '0a4738a0-494a-49f7-90e2-1a9d89c87149'
  alias: Lüftung
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: input_boolean.gaeste_abends
      id: party
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.gaeste_abends
      id: auto
      from: "on"
      to: "off"
    - platform: state
      entity_id: input_button.lueftung_auto
      id: auto
    - platform: state
      entity_id: input_button.lueftung_party
      id: party
    - platform: state
      entity_id: input_button.lueftung_stoss
      id: stoss
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: party
        sequence:
        - service: notify.telegram_jo
          data:
            message: Lüftung Party
        - service: modbus.write_register
          data:
            address: 1104
            unit: 1
            value: 8
            hub: lueftungsanlage
        - delay: 1
        - service: modbus.write_register
          data:
            address: 1161
            unit: 1
            value: 3
            hub: lueftungsanlage
      - conditions:
        - condition: trigger
          id: auto
        sequence:
        - service: notify.telegram_jo
          data:
            message: Lüftung Auto
        - service: modbus.write_register
          data:
            address: 1161
            unit: 1
            value: 1
            hub: lueftungsanlage
      - conditions:
        - condition: trigger
          id: stoss
        sequence:
        - service: notify.telegram_jo
          data:
            message: Lüftung Stoß
        - service: modbus.write_register
          data:
            address: 1103
            unit: 1
            value: 60
            hub: lueftungsanlage
        - delay: 1
        - service: modbus.write_register
          data:
            address: 1161
            unit: 1
            value: 4
            hub: lueftungsanlage
      default: []
#
###############################################
#####          Bewegungsalarm             #####
###############################################
- id: 'fd83d1a0-de60-4abf-9efa-87a1ed31f6f0'
  alias: Bewegungsalarm
  description: ''
  mode: parallel
  trigger:
    - platform: state
      entity_id: input_boolean.flur_alarm_jo
      id: jo_aktiviert
      from: "off"
      to: "on"
    - platform: state
      entity_id: input_boolean.flur_alarm_ma
      id: ma_aktiviert
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pm_o_ko_la_tuer
      id: la_tuer
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pm_o_kw_le_tuer
      id: le_tuer
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pm_o_fl_flur
      id: flur_og
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pm_o_fl_treppe
      id: treppe_oben
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pm_e_fl_treppe_og
      id: treppe_unten
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pm_e_fl_flur
      id: flur_eg
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pm_e_wf_garderobe
      id: garderobe
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pm_e_wf_haustur
      id: haustuer
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pm_e_sz_gang
      id: sz_gang
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.pm_ktr_treppe
      id: kellertreppe
      from: "off"
      to: "on"
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: jo_aktiviert
        sequence:
        - delay: 15
        - service: notify.telegram_jo
          data:
            message: Probe-Bewegungsalarm
      - conditions:
        - condition: trigger
          id: ma_aktiviert
        sequence:
        - delay: 15
        - service: notify.telegram_ma
          data:
            message: Probe-Bewegungsalarm
      - conditions:
        - condition: trigger
          id: la_tuer
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: Bewegung! => Tür Lara
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_ma
              state: 'on'
            sequence:
            - service: notify.telegram_ma
              data:
                message: Bewegung! => Tür Lara
          default: []
      - conditions:
        - condition: trigger
          id: le_tuer
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: Bewegung! => Tür Lea
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_ma
              state: 'on'
            sequence:
            - service: notify.telegram_ma
              data:
                message: Bewegung! => Tür Lea
          default: []
      - conditions:
        - condition: trigger
          id: flur_og
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: Bewegung! => Flur OG
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_ma
              state: 'on'
            sequence:
            - service: notify.telegram_ma
              data:
                message: Bewegung! => Flur OG
          default: []
      - conditions:
        - condition: trigger
          id: treppe_oben
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: Bewegung! => Treppe oben
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_ma
              state: 'on'
            sequence:
            - service: notify.telegram_ma
              data:
                message: Bewegung! => Treppe oben
          default: []
      - conditions:
        - condition: trigger
          id: treppe_unten
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: Bewegung! => Treppe unten
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_ma
              state: 'on'
            sequence:
            - service: notify.telegram_ma
              data:
                message: Bewegung! => Treppe unten
          default: []
      - conditions:
        - condition: trigger
          id: flur_eg
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: Bewegung! => Flur EG
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_ma
              state: 'on'
            sequence:
            - service: notify.telegram_ma
              data:
                message: Bewegung! => Flur EG
          default: []
      - conditions:
        - condition: trigger
          id: garderobe
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: Bewegung! => Garderobe
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_ma
              state: 'on'
            sequence:
            - service: notify.telegram_ma
              data:
                message: Bewegung! => Garderobe
          default: []
      - conditions:
        - condition: trigger
          id: haustuer
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: Bewegung! => Haustür
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_ma
              state: 'on'
            sequence:
            - service: notify.telegram_ma
              data:
                message: Bewegung! => Haustür
          default: []
      - conditions:
        - condition: trigger
          id: sz_gang
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: Bewegung! => Schlafzimmer Gang
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_ma
              state: 'on'
            sequence:
            - service: notify.telegram_ma
              data:
                message: Bewegung! => Schlafzimmer Gang
          default: []
      - conditions:
        - condition: trigger
          id: kellertreppe
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: Bewegung! => Kellertreppe
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_ma
              state: 'on'
            sequence:
            - service: notify.telegram_ma
              data:
                message: Bewegung! => Kellertreppe
          default: []
      default: []
#
###############################################
#####           Waschmaschine             #####
###############################################
- id: '72050f03-17bc-40d6-b20b-ef7836d5a830'
  alias: Waschmaschine
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: binary_sensor.waschmaschine_ist_an
      id: wm_ended
      from: "on"
      to: "off"
    - platform: state
      entity_id: binary_sensor.waschmaschine_ist_an
      id: wm_run
      to: "on"
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.wm_door_delay
      id: wm_door_delay_finished
    - platform: state
      entity_id: binary_sensor.0x00158d00049ff9dd_contact
      id: wm_opened
      to: "on"
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.wm_reminder
      id: wm_reminder
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: wm_ended
        sequence:
        - service: timer.start
          target:
            entity_id: timer.wm_door_delay
          data:
            duration: '00:03:00'
      - conditions:
        - condition: trigger
          id: wm_door_delay_finished
        sequence:
        - service: timer.start
          target:
            entity_id: timer.wm_reminder
          data:
            duration: '01:00:00'
        - service: input_boolean.turn_on
          target:
            entity_id: input_boolean.reminder_wm
      - conditions:
        - condition: trigger
          id: wm_reminder
        sequence:
        - service: notify.telegram_ma
          data:
            message: 'Waschmaschine ist seit einer Stunde fertig'
        - service: notify.telegram_jo
          data:
            message: 'Waschmaschine ist seit einer Stunde fertig'
      - conditions:
        - condition: trigger
          id: wm_opened
        sequence:
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.reminder_wm
        - service: timer.cancel
          target:
            entity_id: timer.wm_reminder
        - service: timer.cancel
          target:
            entity_id: timer.wm_door_delay
      - conditions:
        - condition: trigger
          id: wm_run
        sequence:
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.reminder_wm
        - service: timer.cancel
          target:
            entity_id: timer.wm_reminder
        - service: timer.cancel
          target:
            entity_id: timer.wm_door_delay
      default: []
#
###############################################
#####             Trockner               #####
###############################################
- id: 'f9bf2e02-9e91-4e02-8fbf-55048f9a1343'
  alias: Trockner
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: binary_sensor.trockner_ist_an
      id: dryer_ended
      from: "on"
      to: "off"
    - platform: state
      entity_id: binary_sensor.trockner_ist_geleert
      id: dryer_opened
      to: "on"
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.dryer_reminder
      id: dryer_reminder
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: dryer_ended
        - condition: state
          entity_id: binary_sensor.trockner_ist_geleert
          state: 'off'
        sequence:
        - service: timer.start
          target:
            entity_id: timer.dryer_reminder
          data:
            duration: '02:00:00'
        - service: input_boolean.turn_on
          target:
            entity_id: input_boolean.reminder_dryer
      - conditions:
        - condition: trigger
          id: dryer_reminder
        sequence:
        - service: notify.telegram_ma
          data:
            message: 'Trockner ist seit 2 Stunden fertig'
        - service: notify.telegram_jo
          data:
            message: 'Trockner ist seit 2 Stunden fertig'
      - conditions:
        - condition: trigger
          id: dryer_opened
        sequence:
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.reminder_dryer
        - service: timer.cancel
          target:
            entity_id: timer.dryer_reminder
      default: []
#
###############################################
#####   Wasserventil wöchentlich bewegen  #####
###############################################
- id: '584a5dce-458c-48db-afb9-65ac55606847'
  alias: Wasserventil wöchentlich bewegen
  description: ''
  mode: queued
  trigger:
    - platform: time
      at: "03:38:02"
      id: time_daily
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.water_valve_weekly
      id: timer_finished
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: time_daily
        - condition: time
          weekday:
            - wed
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.pm_e_ba
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Wasserventil konnte nicht bewegt werden, da noch jemand im Bad EG unterwegs war'
          - conditions:
            - condition: state
              entity_id: binary_sensor.pm_e_wc
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Wasserventil konnte nicht bewegt werden, da noch jemand im WC unterwegs war'
          - conditions:
            - condition: state
              entity_id: binary_sensor.pm_e_ku_kuche
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Wasserventil konnte nicht bewegt werden, da noch jemand in der Küche unterwegs war'
          - conditions:
            - condition: state
              entity_id: binary_sensor.pm_o_ba
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Wasserventil konnte nicht bewegt werden, da noch jemand im Bad OG unterwegs war'
          - conditions:
            - condition: state
              entity_id: binary_sensor.waschmaschine_ist_an
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Wasserventil konnte nicht bewegt werden, da die Waschmaschine läuft'
          - conditions:
            - condition: numeric_state
              entity_id: sensor.el_leistung_spulmaschine
              above: 0.1
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Wasserventil konnte nicht bewegt werden, da die Spülmaschine läuft'
          default: 
          - service: switch.turn_off
            target:
              entity_id: switch.wasserabsperrventil
          - service: timer.start
            target:
              entity_id: timer.water_valve_weekly
            data:
              duration: '00:00:45'
          - service: notify.telegram_jo
            data:
              message: 'Wasserventil wöchentlich zu'
      - conditions:
        - condition: trigger
          id: timer_finished
        sequence:
        - service: switch.turn_on
          target:
            entity_id: switch.wasserabsperrventil
        - service: notify.telegram_jo
          data:
            message: 'Wasserventil wieder auf'
      default: []
#
###############################################
#####         Bildschirm Theke            #####
###############################################
- id: '8e8ef7aa-b20b-436c-8110-94030f1069b8'
  alias: Bildschirm Theke
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: binary_sensor.anwesenheit_bildschirm
      to: "on"
      id: presence_on
    - platform: state
      entity_id: binary_sensor.anwesenheit_bildschirm
      to: "off"
      id: presence_off
    - platform: state
      entity_id: sensor.helligkeit_kuche_pm
      to:
      id: brightness
    - platform: time_pattern
      minutes: "*"
      seconds: 23
      id: regularly
    - platform: state
      entity_id: sensor.kiosk_browser_bildschirm_theke
      to: "unavailable"
      for: "00:10:00"
      id: no_connection
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: presence_on
        sequence:
        - service: rest_command.bildschirm_theke_command
          data:
            cmd: screenOn
            key: ''
            value: ''
      - conditions:
        - condition: trigger
          id: presence_off
        sequence:
        - service: rest_command.bildschirm_theke_command
          data:
            cmd: screenOff
            key: ''
            value: ''
      - conditions:
        - condition: trigger
          id: brightness
        sequence:
        - choose:
          - conditions:
            - condition: numeric_state
              entity_id: sensor.helligkeit_kuche_pm
              below: 5
            sequence:
            - service: rest_command.bildschirm_theke_command
              data:
                cmd: setStringSetting
                key: screenBrightness
                value: 51
          - conditions:
            - condition: numeric_state
              entity_id: sensor.helligkeit_kuche_pm
              below: 10
            sequence:
            - service: rest_command.bildschirm_theke_command
              data:
                cmd: setStringSetting
                key: screenBrightness
                value: 77
          - conditions:
            - condition: numeric_state
              entity_id: sensor.helligkeit_kuche_pm
              below: 15
            sequence:
            - service: rest_command.bildschirm_theke_command
              data:
                cmd: setStringSetting
                key: screenBrightness
                value: 102
          - conditions:
            - condition: numeric_state
              entity_id: sensor.helligkeit_kuche_pm
              below: 20
            sequence:
            - service: rest_command.bildschirm_theke_command
              data:
                cmd: setStringSetting
                key: screenBrightness
                value: 128
          - conditions:
            - condition: numeric_state
              entity_id: sensor.helligkeit_kuche_pm
              below: 25
            sequence:
            - service: rest_command.bildschirm_theke_command
              data:
                cmd: setStringSetting
                key: screenBrightness
                value: 153
          - conditions:
            - condition: numeric_state
              entity_id: sensor.helligkeit_kuche_pm
              below: 40
            sequence:
            - service: rest_command.bildschirm_theke_command
              data:
                cmd: setStringSetting
                key: screenBrightness
                value: 178
          - conditions:
            - condition: numeric_state
              entity_id: sensor.helligkeit_kuche_pm
              below: 80
            sequence:
            - service: rest_command.bildschirm_theke_command
              data:
                cmd: setStringSetting
                key: screenBrightness
                value: 204
          - conditions:
            - condition: numeric_state
              entity_id: sensor.helligkeit_kuche_pm
              below: 200
            sequence:
            - service: rest_command.bildschirm_theke_command
              data:
                cmd: setStringSetting
                key: screenBrightness
                value: 230
          default:
          - service: rest_command.bildschirm_theke_command
            data:
              cmd: setStringSetting
              key: screenBrightness
              value: 245
      - conditions:
        - condition: trigger
          id: regularly
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.anwesenheit_bildschirm
              state: 'off'
            sequence:
            - service: rest_command.bildschirm_theke_command
              data:
                cmd: screenOff
                key: ''
                value: ''
          default:
          - service: rest_command.bildschirm_theke_command
            data:
              cmd: screenOn
              key: ''
              value: ''
      - conditions:
        - condition: trigger
          id: no_connection
        sequence:
        - service: switch.turn_off
          target:
            entity_id: switch.esp_sd_3_relais
        - delay: 5
        - service: switch.turn_on
          target:
            entity_id: switch.esp_sd_3_relais
      default: []
#
###############################################
#####      Notify KNX unavailable         #####
###############################################
- id: '61987d8a-44d0-4def-8580-b9acfc7f23ab'
  alias: Notify KNX unavailable
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: binary_sensor.pm_o_ko_la_raum
      to: "unavailable"
      for: "00:00:30"
    - platform: state
      entity_id: binary_sensor.pm_o_ko_la_raum
      to: "unknown"
      for: "00:00:30"
  condition: []
  action:
    - service: notify.telegram_jo
      data:
        message: 'KNX unavailable'
#
###############################################
#####            Pizza-Knopf              #####
###############################################
- id: '90891b56-958a-4460-a66d-389f3cab690c'
  alias: Pizza-Knopf
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: input_number.pizza_timer_2
      to: ~
      id: input_number_changed
    - platform: state
      entity_id: input_button.pizza_timer_standard
      id: input_button_pizza_timer_standard
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.pizza_timer_ha
      id: timer_finished
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: input_number_changed
        sequence:
        - choose:
          - conditions:
            - condition: template
              value_template: >
                {{ (trigger.to_state.state | float(0)) == 0 }}
            sequence:
            - choose:
              - conditions:
                - condition: state
                  entity_id: timer.pizza_timer_ha
                  state: 'idle'
                sequence:
                - service: notify.telegram_jo
                  data:
                    message: 'Pizza ist fertig'
                - service: rest_command.bildschirm_theke_speak
                  data:
                    text: Pizza%20ist%20fertig%2E%20Lasst%20es%20euch%20schmecken
                - service: media_player.media_pause
                  entity_id: media_player.kodi_wz_2
                - service: notify.kodi_wz_2
                  data:
                    title: Pizza
                    message: ist fertig
                    data:
                      displaytime: 15000
                      icon: "http://odroidxu4/sonstiges/pizza2.jpg"
              default:
              - service: notify.telegram_jo
                data:
                  message: 'Pizza-Timer abgebrochen'
              - service: timer.cancel
                target:
                  entity_id: timer.pizza_timer_ha
          - conditions:
            - condition: template
              value_template: >
                {{ (trigger.to_state.state | float(0)) > 0 }}
            sequence:
            - service: timer.cancel
              target:
                entity_id: timer.pizza_timer_ha
            - service: timer.start
              target:
                entity_id: timer.pizza_timer_ha
              data:
                duration: '00:01:00'
          default: []
      - conditions:
        - condition: trigger
          id: timer_finished
        - condition: template
          value_template: >
            {{ (states('input_number.pizza_timer_2') | float(0)) > 0 }}
        sequence:
        - service: input_number.decrement
          entity_id: input_number.pizza_timer_2
      - conditions:
        - condition: trigger
          id: input_button_pizza_timer_standard
        sequence:
        - service: input_number.set_value
          data:
            value: 12
          target:
            entity_id: input_number.pizza_timer_2
      default: []
#
###############################################
#####        Hochzeitsbild an aus         #####
###############################################
- id: '899e72d8-444a-4aef-9ef5-a7b908705177'
  alias: Hochzeitsbild an aus
  description: ''
  mode: queued
  trigger:
    - platform: time
      at: "16:55:00"
      id: time_on
    - platform: time
      at: "23:00:00"
      id: time_off
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: time_on
        sequence:
        - service: input_boolean.turn_on
          target:
            entity_id: input_boolean.beleuchtung_hochzeitsbild
      - conditions:
        - condition: trigger
          id: time_off
        sequence:
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.beleuchtung_hochzeitsbild
      default: []
#
###############################################
#####        Handyladesteckdose Ma        #####
###############################################
- id: 'b83e5ea9-341a-4c26-969f-664cf1db6690'
  alias: Handyladesteckdose Ma
  description: ''
  mode: queued
  trigger:
    - platform: time
      at: "12:02:01"
      id: turn_on
    - platform: time
      at: "18:02:01"
      id: turn_on
    - platform: numeric_state
      entity_id: sensor.pixel_3a_ma_akkustand
      above: 94
      id: charging_done
    - platform: numeric_state
      entity_id: sensor.pixel_3a_ma_akkustand
      below: 90
      id: charging_needed
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: turn_on
        sequence:
        - service: switch.turn_on
          target:
            entity_id: switch.shellyswitch25_10521c45de0b_relay_0
      - conditions:
        - condition: trigger
          id: charging_done
        - condition: state
          entity_id: device_tracker.pixel_3a_ma_wlan
          state: home
        sequence:
        - service: switch.turn_off
          target:
            entity_id: switch.shellyswitch25_10521c45de0b_relay_0
      - conditions:
        - condition: trigger
          id: charging_needed
        sequence:
        - service: switch.turn_on
          target:
            entity_id: switch.shellyswitch25_10521c45de0b_relay_0
#
###############################################
#####        Handyladesteckdose Jo        #####
###############################################
- id: 'b75d2a08-4740-4a26-bf8b-260c296393ae'
  alias: Handyladesteckdose Jo
  description: ''
  mode: queued
  trigger:
    - platform: time
      at: "12:02:02"
      id: turn_on
    - platform: time
      at: "18:02:02"
      id: turn_on
    - platform: numeric_state
      entity_id: sensor.pixel_3a_jochen_akkustand
      above: 94
      id: charging_done
    - platform: numeric_state
      entity_id: sensor.pixel_3a_jochen_akkustand
      below: 90
      id: charging_needed
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: turn_on
        sequence:
        - service: switch.turn_on
          target:
            entity_id: switch.shellyswitch25_10521c45de0b_relay_1
      - conditions:
        - condition: trigger
          id: charging_done
        - condition: state
          entity_id: device_tracker.pixel_3a_jo_wlan
          state: home
        sequence:
        - service: switch.turn_off
          target:
            entity_id: switch.shellyswitch25_10521c45de0b_relay_1
      - conditions:
        - condition: trigger
          id: charging_needed
        sequence:
        - service: switch.turn_on
          target:
            entity_id: switch.shellyswitch25_10521c45de0b_relay_1
#
###############################################
#####        Jalousie Schlafzimmer        #####
###############################################
- id: 'd19e392f-7525-49c9-8463-7b36baf387af'
  alias: Jalousie Schlafzimmer
  description: ''
  mode: queued
  trigger:
    - platform: numeric_state
      entity_id: sensor.helligkeit_wetterstation
      below: 4000
      id: down
    - platform: numeric_state
      entity_id: sensor.helligkeit_wetterstation
      below: 800
      id: down
    - platform: time
      at: "21:30:00"
      id: down
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: down
        - condition: time
          after: "15:00:00"
        sequence:
        - service: cover.set_cover_position
          data:
            position: 100
          target:
            entity_id: cover.jalousie_schlafzimmer
        - service: cover.set_cover_tilt_position
          data:
            tilt_position: 100
          target:
            entity_id: cover.jalousie_schlafzimmer
#
###############################################
#####           Jalousie Bad OG           #####
###############################################
- id: '951576c5-9445-4787-858e-ab3679812971'
  alias: Jalousie Bad OG
  description: ''
  mode: queued
  trigger:
    - platform: numeric_state
      entity_id: sensor.helligkeit_wetterstation
      below: 700
      id: down
    - platform: time
      at: "18:30:00"
      id: down
    - platform: state
      entity_id: switch.bad_og_nachtmodus
      from: 'on'
      to: 'off'
      id: morning
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: down
        - condition: time
          after: "15:00:00"
        sequence:
        - service: cover.set_cover_position
          data:
            position: 100
          target:
            entity_id: cover.jalousie_bad_og
        - service: cover.set_cover_tilt_position
          data:
            tilt_position: 17
          target:
            entity_id: cover.jalousie_bad_og
      - conditions:
        - condition: trigger
          id: morning
        - condition: time
          after: "04:00:00"
          before: "11:00:00"
        sequence:
        - service: cover.set_cover_tilt_position
          data:
            tilt_position: 17
          target:
            entity_id: cover.jalousie_bad_og
#
###############################################
#####       Jalousien Wohnbereich         #####
###############################################
- id: '5ea0b2bd-54bb-4e6c-8ff4-e0ec26e5e7d6'
  alias: Jalousien Wohnbereich
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: binary_sensor.nachtmodus_wohnbereich_jalousie
      from: 'on'
      to: 'off'
      id: morning
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: morning
        - condition: time
          after: "04:00:00"
          before: "11:00:00"
        sequence:
        - service: cover.set_cover_tilt_position
          data:
            tilt_position: 80
          target:
            entity_id: cover.jalousie_kuche
        - service: cover.set_cover_tilt_position
          data:
            tilt_position: 80
          target:
            entity_id: cover.jalousie_hst
        - service: cover.set_cover_tilt_position
          data:
            tilt_position: 80
          target:
            entity_id: cover.jalousie_wz_bodentiefes
        - service: cover.set_cover_tilt_position
          data:
            tilt_position: 80
          target:
            entity_id: cover.jalousie_wz_couch
#
###############################################
#####           Gewitter-Knopf            #####
###############################################
- id: '96ca5912-cf4c-4b2e-bd03-fa7932fceb9e'
  alias: Gewitter-Knopf
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: input_boolean.gewitter
      from: 'off'
      to: 'on'
      id: gewitter_start
    - platform: state
      entity_id: input_boolean.gewitter
      from: 'on'
      to: 'off'
      id: gewitter_ende
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: gewitter_start
        sequence:
        - service: notify.telegram_jo
          data:
            message: 'Gewitter! Ich nehme TV, Mixi, Lüftung, Waschmaschine und Trockner jetzt den Strom'
        - service: notify.telegram_ma
          data:
            message: 'Gewitter! Ich nehme TV, Mixi, Lüftung, Waschmaschine und Trockner jetzt den Strom'
        - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.tv_ist_an
              state: 'on'
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'TV ist wohl grad an. Den lasse ich an'
            - service: notify.telegram_ma
              data:
                message: 'TV ist wohl grad an. Den lasse ich an'
          default: 
          - service: switch.turn_off
            target:
              entity_id: switch.tv
        - choose:
          - conditions:
            - condition: numeric_state
              entity_id: sensor.el_leistung_mixi
              above: 5
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Mixi ist wohl grad an. Den lasse ich an'
            - service: notify.telegram_ma
              data:
                message: 'Mixi ist wohl grad an. Den lasse ich an'
          default: 
          - service: switch.turn_off
            target:
              entity_id: switch.mixi
        - choose:
          - conditions:
            - condition: numeric_state
              entity_id: sensor.el_leistung_waschmaschine
              above: 12
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Waschmaschine ist wohl grad an. Die lasse ich an'
            - service: notify.telegram_ma
              data:
                message: 'Waschmaschine ist wohl grad an. Die lasse ich an'
          default: 
          - service: switch.turn_off
            target:
              entity_id: switch.waschmaschine
        - choose:
          - conditions:
            - condition: numeric_state
              entity_id: sensor.el_leistung_trockner
              above: 4
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Trockner läuft wohl gerade. Den lasse ich an'
            - service: notify.telegram_ma
              data:
                message: 'Trockner läuft wohl gerade. Den lasse ich an'
          default: 
          - service: switch.turn_off
            target:
              entity_id: switch.trockner
        - service: switch.turn_off
          target:
            entity_id: switch.luftungsanlage
      - conditions:
        - condition: trigger
          id: gewitter_ende
        sequence:
        - service: notify.telegram_jo
          data:
            message: 'Gewitter ist wohl vorbei, gut. Ich geb TV, Mixi, Lüftung, Waschmaschine und Trockner jetzt wieder Strom'
        - service: notify.telegram_ma
          data:
            message: 'Gewitter ist wohl vorbei, gut. Ich geb TV, Mixi, Lüftung, Waschmaschine und Trockner jetzt wieder Strom'
        - service: switch.turn_on
          target:
            entity_id: switch.luftungsanlage
        - service: switch.turn_on
          target:
            entity_id: switch.trockner
        - service: switch.turn_on
          target:
            entity_id: switch.waschmaschine
        - service: switch.turn_on
          target:
            entity_id: switch.mixi
        - service: switch.turn_on
          target:
            entity_id: switch.tv
#
###############################################
#####         Gewitter-Erkennung          #####
###############################################
- id: '71be220b-658f-467a-81dd-8fd24ad0ffbc'
  alias: Gewitter-Erkennung
  description: ''
  mode: queued
  trigger:
    - platform: numeric_state
      entity_id: sensor.blitzortung_lightning_distance
      value_template: "{{ states('sensor.blitzortung_lightning_distance') | float(1000) }}"
      below: 5
      id: gewitter_automatisch_erkannt
    - platform: numeric_state
      entity_id: sensor.blitzortung_lightning_counter
      below: 0.5
      id: gewitter_ende_automatisch_erkannt
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: gewitter_automatisch_erkannt
        - condition: state
          entity_id: input_boolean.gewitter
          state: "off"
        sequence:
        - service: notify.telegram_jo
          data:
            message: 'Gewitter automatisch erkannt. Drücke jetzt den Gewitter-Knopf für euch'
        - service: notify.telegram_ma
          data:
            message: 'Gewitter automatisch erkannt. Drücke jetzt den Gewitter-Knopf für euch'
        - service: input_boolean.turn_on
          target:
            entity_id: input_boolean.gewitter
      - conditions:
        - condition: trigger
          id: gewitter_ende_automatisch_erkannt
        - condition: state
          entity_id: input_boolean.gewitter
          state: "on"
        sequence:
        - service: notify.telegram_jo
          data:
            message: 'Keine Blitze mehr im Umkreis von 30km. Schalte jetzt den Gewitter-Knopf für euch aus'
        - service: notify.telegram_ma
          data:
            message: 'Keine Blitze mehr im Umkreis von 30km. Schalte jetzt den Gewitter-Knopf für euch aus'
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.gewitter
#
###############################################
#####   Kinder-schon-wach-Knopf Reset     #####
###############################################
- id: '6410909e-aafc-4f0f-8567-ac3f338f4aef'
  alias: Kinder-schon-wach-Knopf Reset
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: switch.majo_schlafen
      to: 'off'
  condition: []
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.kinder_schon_wach
#
###############################################
#####     Schlafen-Knopf Kinder Reset     #####
###############################################
- id: '747ab1c2-edef-4e9c-b877-ea376633d87f'
  alias: Schlafen-Knopf Kinder Reset
  description: ''
  mode: queued
  trigger:
    - platform: time
      at: "09:30:02"
  condition: []
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.la_schlaft
    - service: switch.turn_off
      target:
        entity_id: switch.le_schlaft
#
###############################################
#####            Telegram Bot             #####
###############################################
- id: '82a95f09-9aa0-401e-bbc8-79d1d24fe520'
  alias: Telegram Bot
  description: ''
  mode: queued
  trigger:
    - platform: event
      event_type: telegram_text
      id: gewitter
      event_data:
        text: Gewitter
    - platform: event
      event_type: telegram_text
      id: diesel
      event_data:
        text: Diesel
    - platform: event
      event_type: telegram_text
      id: e10
      event_data:
        text: Benzin
    - platform: event
      event_type: telegram_text
      id: e10
      event_data:
        text: e10
    - platform: event
      event_type: telegram_text
      id: e10
      event_data:
        text: E10
    - platform: event
      event_type: telegram_text
      id: super
      event_data:
        text: super
    - platform: event
      event_type: telegram_text
      id: super
      event_data:
        text: Super
    - platform: event
      event_type: telegram_text
      id: tanken
      event_data:
        text: tanken
    - platform: event
      event_type: telegram_text
      id: tanken
      event_data:
        text: Tanken
    - platform: event
      event_type: telegram_text
      id: geo_ma
      event_data:
        text: Geo
    - platform: event
      event_type: telegram_text
      id: geo_ma
      event_data:
        text: geo
    - platform: event
      event_type: telegram_text
      id: alarm_jo
      event_data:
        text: Alarm
    - platform: event
      event_type: telegram_text
      id: alarm_jo
      event_data:
        text: alarm
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: gewitter
        sequence:
        - service: input_boolean.toggle
          target:
            entity_id: input_boolean.gewitter
      - conditions:
        - condition: trigger
          id: diesel
        sequence:
        - service: telegram_bot.send_message
          data:
            target: "{{ trigger.event.data.user_id }}"
            parse_mode: markdown
            message: >
              *Preise Diesel*
              
              
              *Waldburg:*
                {{ states('sensor.aral_wolfegger_strasse_2_diesel') | replace('unknown','--- ') }}€ Vogt ({{ states('binary_sensor.aral_wolfegger_strasse_2_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_schomburger_strasse_1_diesel') | replace('unknown','--- ') }}€ Amtzell ({{ states('binary_sensor.aral_schomburger_strasse_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.avia_bildspitz_1_diesel') | replace('unknown','--- ') }}€ Hannober ({{ states('binary_sensor.avia_bildspitz_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Wangen:*
                {{ states('sensor.shell_ravensburger_str_72_diesel') | replace('unknown','--- ') }}€ Shell ({{ states('binary_sensor.shell_ravensburger_str_72_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.esso_friedrich_ebert_str_15_diesel') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_friedrich_ebert_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_zeppelinstrasse_14_16_diesel') | replace('unknown','--- ') }}€ BFT Zeppelinstr. ({{ states('binary_sensor.bft_zeppelinstrasse_14_16_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.ran_lindauer_str_59_diesel') | replace('unknown','--- ') }}€ RAN ({{ states('binary_sensor.ran_lindauer_str_59_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_erzbergerstrasse_61_diesel') | replace('unknown','--- ') }}€ BFT Erzbergstr. ({{ states('binary_sensor.bft_erzbergerstrasse_61_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *FN:*
                {{ states('sensor.seestrasse_106_diesel') | replace('unknown','--- ') }}€ Schindele ({{ states('binary_sensor.seestrasse_106_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.marktkauf_aussere_alinger_str_20_diesel') | replace('unknown','--- ') }}€ Marktkauf ({{ states('binary_sensor.marktkauf_aussere_alinger_str_20_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.jet_ravensburger_strasse_63_diesel') | replace('unknown','--- ') }}€ Jet ({{ states('binary_sensor.jet_ravensburger_strasse_63_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_hauptstrasse_88_diesel') | replace('unknown','--- ') }}€ Mecka Aral ({{ states('binary_sensor.aral_hauptstrasse_88_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.pinoil_lindauer_strasse_26_diesel') | replace('unknown','--- ') }}€ TT Pinoil ({{ states('binary_sensor.pinoil_lindauer_strasse_26_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.agip_eni_lindauer_strasse_41_diesel') | replace('unknown','--- ') }}€ TT Agip ({{ states('binary_sensor.agip_eni_lindauer_strasse_41_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_tettnanger_strasse_150_diesel') | replace('unknown','--- ') }}€ Aral Pfingstw. ({{ states('binary_sensor.aral_tettnanger_strasse_150_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *RV:*
                {{ states('sensor.esso_wangener_str_94_diesel') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_wangener_str_94_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Jessen:*
                {{ states('sensor.sprint_rehainer_str_15_diesel') | replace('unknown','--- ') }}€ Sprint ({{ states('binary_sensor.sprint_rehainer_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_r_luxemburg_strasse_105_diesel') | replace('unknown','--- ') }}€ Aral ({{ states('binary_sensor.aral_r_luxemburg_strasse_105_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.totalenergies_rosa_luxemburg_str_131_diesel') | replace('unknown','--- ') }}€ Total ({{ states('binary_sensor.totalenergies_rosa_luxemburg_str_131_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
      - conditions:
        - condition: trigger
          id: e10
        sequence:
        - service: telegram_bot.send_message
          data:
            target: "{{ trigger.event.data.user_id }}"
            parse_mode: markdown
            message: >
              *Preise E10*
              
              
              *Waldburg:*
                {{ states('sensor.aral_wolfegger_strasse_2_super_e10') | replace('unknown','--- ') }}€ Vogt ({{ states('binary_sensor.aral_wolfegger_strasse_2_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_schomburger_strasse_1_super_e10') | replace('unknown','--- ') }}€ Amtzell ({{ states('binary_sensor.aral_schomburger_strasse_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.avia_bildspitz_1_super_e10') | replace('unknown','--- ') }}€ Hannober ({{ states('binary_sensor.avia_bildspitz_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Wangen:*
                {{ states('sensor.shell_ravensburger_str_72_super_e10') | replace('unknown','--- ') }}€ Shell ({{ states('binary_sensor.shell_ravensburger_str_72_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.esso_friedrich_ebert_str_15_super_e10') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_friedrich_ebert_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_zeppelinstrasse_14_16_super_e10') | replace('unknown','--- ') }}€ BFT Zeppelinstr. ({{ states('binary_sensor.bft_zeppelinstrasse_14_16_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.ran_lindauer_str_59_super_e10') | replace('unknown','--- ') }}€ RAN ({{ states('binary_sensor.ran_lindauer_str_59_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_erzbergerstrasse_61_super_e10') | replace('unknown','--- ') }}€ BFT Erzbergstr. ({{ states('binary_sensor.bft_erzbergerstrasse_61_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *FN:*
                {{ states('sensor.seestrasse_106_super_e10') | replace('unknown','--- ') }}€ Schindele ({{ states('binary_sensor.seestrasse_106_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.marktkauf_aussere_alinger_str_20_super_e10') | replace('unknown','--- ') }}€ Marktkauf ({{ states('binary_sensor.marktkauf_aussere_alinger_str_20_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.jet_ravensburger_strasse_63_super_e10') | replace('unknown','--- ') }}€ Jet ({{ states('binary_sensor.jet_ravensburger_strasse_63_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_hauptstrasse_88_super_e10') | replace('unknown','--- ') }}€ Mecka Aral ({{ states('binary_sensor.aral_hauptstrasse_88_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.pinoil_lindauer_strasse_26_super_e10') | replace('unknown','--- ') }}€ TT Pinoil ({{ states('binary_sensor.pinoil_lindauer_strasse_26_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.agip_eni_lindauer_strasse_41_super_e10') | replace('unknown','--- ') }}€ TT Agip ({{ states('binary_sensor.agip_eni_lindauer_strasse_41_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_tettnanger_strasse_150_super_e10') | replace('unknown','--- ') }}€ Aral Pfingstw. ({{ states('binary_sensor.aral_tettnanger_strasse_150_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *RV:*
                {{ states('sensor.esso_wangener_str_94_super_e10') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_wangener_str_94_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Jessen:*
                {{ states('sensor.sprint_rehainer_str_15_super_e10') | replace('unknown','--- ') }}€ Sprint ({{ states('binary_sensor.sprint_rehainer_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_r_luxemburg_strasse_105_super_e10') | replace('unknown','--- ') }}€ Aral ({{ states('binary_sensor.aral_r_luxemburg_strasse_105_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.totalenergies_rosa_luxemburg_str_131_super_e10') | replace('unknown','--- ') }}€ Total ({{ states('binary_sensor.totalenergies_rosa_luxemburg_str_131_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
      - conditions:
        - condition: trigger
          id: super
        sequence:
        - service: telegram_bot.send_message
          data:
            target: "{{ trigger.event.data.user_id }}"
            parse_mode: markdown
            message: >
              *Preise Super*
              
              
              *Waldburg:*
                {{ states('sensor.aral_wolfegger_strasse_2_super') | replace('unknown','--- ') }}€ Vogt ({{ states('binary_sensor.aral_wolfegger_strasse_2_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_schomburger_strasse_1_super') | replace('unknown','--- ') }}€ Amtzell ({{ states('binary_sensor.aral_schomburger_strasse_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.avia_bildspitz_1_super') | replace('unknown','--- ') }}€ Hannober ({{ states('binary_sensor.avia_bildspitz_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Wangen:*
                {{ states('sensor.shell_ravensburger_str_72_super') | replace('unknown','--- ') }}€ Shell ({{ states('binary_sensor.shell_ravensburger_str_72_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.esso_friedrich_ebert_str_15_super') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_friedrich_ebert_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_zeppelinstrasse_14_16_super') | replace('unknown','--- ') }}€ BFT Zeppelinstr. ({{ states('binary_sensor.bft_zeppelinstrasse_14_16_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.ran_lindauer_str_59_super') | replace('unknown','--- ') }}€ RAN ({{ states('binary_sensor.ran_lindauer_str_59_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_erzbergerstrasse_61_super') | replace('unknown','--- ') }}€ BFT Erzbergstr. ({{ states('binary_sensor.bft_erzbergerstrasse_61_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *FN:*
                {{ states('sensor.seestrasse_106_super') | replace('unknown','--- ') }}€ Schindele ({{ states('binary_sensor.seestrasse_106_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.marktkauf_aussere_alinger_str_20_super') | replace('unknown','--- ') }}€ Marktkauf ({{ states('binary_sensor.marktkauf_aussere_alinger_str_20_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.jet_ravensburger_strasse_63_super') | replace('unknown','--- ') }}€ Jet ({{ states('binary_sensor.jet_ravensburger_strasse_63_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_hauptstrasse_88_super') | replace('unknown','--- ') }}€ Mecka Aral ({{ states('binary_sensor.aral_hauptstrasse_88_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.pinoil_lindauer_strasse_26_super') | replace('unknown','--- ') }}€ TT Pinoil ({{ states('binary_sensor.pinoil_lindauer_strasse_26_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.agip_eni_lindauer_strasse_41_super') | replace('unknown','--- ') }}€ TT Agip ({{ states('binary_sensor.agip_eni_lindauer_strasse_41_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_tettnanger_strasse_150_super') | replace('unknown','--- ') }}€ Aral Pfingstw. ({{ states('binary_sensor.aral_tettnanger_strasse_150_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *RV:*
                {{ states('sensor.esso_wangener_str_94_super') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_wangener_str_94_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Jessen:*
                {{ states('sensor.sprint_rehainer_str_15_super') | replace('unknown','--- ') }}€ Sprint ({{ states('binary_sensor.sprint_rehainer_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_r_luxemburg_strasse_105_super') | replace('unknown','--- ') }}€ Aral ({{ states('binary_sensor.aral_r_luxemburg_strasse_105_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.totalenergies_rosa_luxemburg_str_131_super') | replace('unknown','--- ') }}€ Total ({{ states('binary_sensor.totalenergies_rosa_luxemburg_str_131_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
      - conditions:
        - condition: trigger
          id: tanken
        sequence:
        - service: telegram_bot.send_message
          data:
            target: "{{ trigger.event.data.user_id }}"
            parse_mode: markdown
            message: >
              *Preise E10*
              
              
              *Waldburg:*
                {{ states('sensor.aral_wolfegger_strasse_2_super_e10') | replace('unknown','--- ') }}€ Vogt ({{ states('binary_sensor.aral_wolfegger_strasse_2_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_schomburger_strasse_1_super_e10') | replace('unknown','--- ') }}€ Amtzell ({{ states('binary_sensor.aral_schomburger_strasse_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.avia_bildspitz_1_super_e10') | replace('unknown','--- ') }}€ Hannober ({{ states('binary_sensor.avia_bildspitz_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Wangen:*
                {{ states('sensor.shell_ravensburger_str_72_super_e10') | replace('unknown','--- ') }}€ Shell ({{ states('binary_sensor.shell_ravensburger_str_72_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.esso_friedrich_ebert_str_15_super_e10') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_friedrich_ebert_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_zeppelinstrasse_14_16_super_e10') | replace('unknown','--- ') }}€ BFT Zeppelinstr. ({{ states('binary_sensor.bft_zeppelinstrasse_14_16_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.ran_lindauer_str_59_super_e10') | replace('unknown','--- ') }}€ RAN ({{ states('binary_sensor.ran_lindauer_str_59_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_erzbergerstrasse_61_super_e10') | replace('unknown','--- ') }}€ BFT Erzbergstr. ({{ states('binary_sensor.bft_erzbergerstrasse_61_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *FN:*
                {{ states('sensor.seestrasse_106_super_e10') | replace('unknown','--- ') }}€ Schindele ({{ states('binary_sensor.seestrasse_106_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.marktkauf_aussere_alinger_str_20_super_e10') | replace('unknown','--- ') }}€ Marktkauf ({{ states('binary_sensor.marktkauf_aussere_alinger_str_20_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.jet_ravensburger_strasse_63_super_e10') | replace('unknown','--- ') }}€ Jet ({{ states('binary_sensor.jet_ravensburger_strasse_63_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_hauptstrasse_88_super_e10') | replace('unknown','--- ') }}€ Mecka Aral ({{ states('binary_sensor.aral_hauptstrasse_88_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.pinoil_lindauer_strasse_26_super_e10') | replace('unknown','--- ') }}€ TT Pinoil ({{ states('binary_sensor.pinoil_lindauer_strasse_26_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.agip_eni_lindauer_strasse_41_super_e10') | replace('unknown','--- ') }}€ TT Agip ({{ states('binary_sensor.agip_eni_lindauer_strasse_41_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_tettnanger_strasse_150_super_e10') | replace('unknown','--- ') }}€ Aral Pfingstw. ({{ states('binary_sensor.aral_tettnanger_strasse_150_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *RV:*
                {{ states('sensor.esso_wangener_str_94_super_e10') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_wangener_str_94_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Jessen:*
                {{ states('sensor.sprint_rehainer_str_15_super_e10') | replace('unknown','--- ') }}€ Sprint ({{ states('binary_sensor.sprint_rehainer_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_r_luxemburg_strasse_105_super_e10') | replace('unknown','--- ') }}€ Aral ({{ states('binary_sensor.aral_r_luxemburg_strasse_105_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.totalenergies_rosa_luxemburg_str_131_super_e10') | replace('unknown','--- ') }}€ Total ({{ states('binary_sensor.totalenergies_rosa_luxemburg_str_131_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
        - service: telegram_bot.send_message
          data:
            target: "{{ trigger.event.data.user_id }}"
            parse_mode: markdown
            message: >
              *Preise Super*
              
              
              *Waldburg:*
                {{ states('sensor.aral_wolfegger_strasse_2_super') | replace('unknown','--- ') }}€ Vogt ({{ states('binary_sensor.aral_wolfegger_strasse_2_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_schomburger_strasse_1_super') | replace('unknown','--- ') }}€ Amtzell ({{ states('binary_sensor.aral_schomburger_strasse_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.avia_bildspitz_1_super') | replace('unknown','--- ') }}€ Hannober ({{ states('binary_sensor.avia_bildspitz_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Wangen:*
                {{ states('sensor.shell_ravensburger_str_72_super') | replace('unknown','--- ') }}€ Shell ({{ states('binary_sensor.shell_ravensburger_str_72_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.esso_friedrich_ebert_str_15_super') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_friedrich_ebert_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_zeppelinstrasse_14_16_super') | replace('unknown','--- ') }}€ BFT Zeppelinstr. ({{ states('binary_sensor.bft_zeppelinstrasse_14_16_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.ran_lindauer_str_59_super') | replace('unknown','--- ') }}€ RAN ({{ states('binary_sensor.ran_lindauer_str_59_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_erzbergerstrasse_61_super') | replace('unknown','--- ') }}€ BFT Erzbergstr. ({{ states('binary_sensor.bft_erzbergerstrasse_61_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *FN:*
                {{ states('sensor.seestrasse_106_super') | replace('unknown','--- ') }}€ Schindele ({{ states('binary_sensor.seestrasse_106_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.marktkauf_aussere_alinger_str_20_super') | replace('unknown','--- ') }}€ Marktkauf ({{ states('binary_sensor.marktkauf_aussere_alinger_str_20_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.jet_ravensburger_strasse_63_super') | replace('unknown','--- ') }}€ Jet ({{ states('binary_sensor.jet_ravensburger_strasse_63_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_hauptstrasse_88_super') | replace('unknown','--- ') }}€ Mecka Aral ({{ states('binary_sensor.aral_hauptstrasse_88_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.pinoil_lindauer_strasse_26_super') | replace('unknown','--- ') }}€ TT Pinoil ({{ states('binary_sensor.pinoil_lindauer_strasse_26_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.agip_eni_lindauer_strasse_41_super') | replace('unknown','--- ') }}€ TT Agip ({{ states('binary_sensor.agip_eni_lindauer_strasse_41_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_tettnanger_strasse_150_super') | replace('unknown','--- ') }}€ Aral Pfingstw. ({{ states('binary_sensor.aral_tettnanger_strasse_150_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *RV:*
                {{ states('sensor.esso_wangener_str_94_super') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_wangener_str_94_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Jessen:*
                {{ states('sensor.sprint_rehainer_str_15_super') | replace('unknown','--- ') }}€ Sprint ({{ states('binary_sensor.sprint_rehainer_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_r_luxemburg_strasse_105_super') | replace('unknown','--- ') }}€ Aral ({{ states('binary_sensor.aral_r_luxemburg_strasse_105_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.totalenergies_rosa_luxemburg_str_131_super') | replace('unknown','--- ') }}€ Total ({{ states('binary_sensor.totalenergies_rosa_luxemburg_str_131_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
        - service: telegram_bot.send_message
          data:
            target: "{{ trigger.event.data.user_id }}"
            parse_mode: markdown
            message: >
              *Preise Diesel*
              
              
              *Waldburg:*
                {{ states('sensor.aral_wolfegger_strasse_2_diesel') | replace('unknown','--- ') }}€ Vogt ({{ states('binary_sensor.aral_wolfegger_strasse_2_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_schomburger_strasse_1_diesel') | replace('unknown','--- ') }}€ Amtzell ({{ states('binary_sensor.aral_schomburger_strasse_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.avia_bildspitz_1_diesel') | replace('unknown','--- ') }}€ Hannober ({{ states('binary_sensor.avia_bildspitz_1_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Wangen:*
                {{ states('sensor.shell_ravensburger_str_72_diesel') | replace('unknown','--- ') }}€ Shell ({{ states('binary_sensor.shell_ravensburger_str_72_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.esso_friedrich_ebert_str_15_diesel') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_friedrich_ebert_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_zeppelinstrasse_14_16_diesel') | replace('unknown','--- ') }}€ BFT Zeppelinstr. ({{ states('binary_sensor.bft_zeppelinstrasse_14_16_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.ran_lindauer_str_59_diesel') | replace('unknown','--- ') }}€ RAN ({{ states('binary_sensor.ran_lindauer_str_59_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.bft_erzbergerstrasse_61_diesel') | replace('unknown','--- ') }}€ BFT Erzbergstr. ({{ states('binary_sensor.bft_erzbergerstrasse_61_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *FN:*
                {{ states('sensor.seestrasse_106_diesel') | replace('unknown','--- ') }}€ Schindele ({{ states('binary_sensor.seestrasse_106_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.marktkauf_aussere_alinger_str_20_diesel') | replace('unknown','--- ') }}€ Marktkauf ({{ states('binary_sensor.marktkauf_aussere_alinger_str_20_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.jet_ravensburger_strasse_63_diesel') | replace('unknown','--- ') }}€ Jet ({{ states('binary_sensor.jet_ravensburger_strasse_63_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_hauptstrasse_88_diesel') | replace('unknown','--- ') }}€ Mecka Aral ({{ states('binary_sensor.aral_hauptstrasse_88_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.pinoil_lindauer_strasse_26_diesel') | replace('unknown','--- ') }}€ TT Pinoil ({{ states('binary_sensor.pinoil_lindauer_strasse_26_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.agip_eni_lindauer_strasse_41_diesel') | replace('unknown','--- ') }}€ TT Agip ({{ states('binary_sensor.agip_eni_lindauer_strasse_41_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_tettnanger_strasse_150_diesel') | replace('unknown','--- ') }}€ Aral Pfingstw. ({{ states('binary_sensor.aral_tettnanger_strasse_150_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *RV:*
                {{ states('sensor.esso_wangener_str_94_diesel') | replace('unknown','--- ') }}€ Esso ({{ states('binary_sensor.esso_wangener_str_94_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})

              *Jessen:*
                {{ states('sensor.sprint_rehainer_str_15_diesel') | replace('unknown','--- ') }}€ Sprint ({{ states('binary_sensor.sprint_rehainer_str_15_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.aral_r_luxemburg_strasse_105_diesel') | replace('unknown','--- ') }}€ Aral ({{ states('binary_sensor.aral_r_luxemburg_strasse_105_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
                {{ states('sensor.totalenergies_rosa_luxemburg_str_131_diesel') | replace('unknown','--- ') }}€ Total ({{ states('binary_sensor.totalenergies_rosa_luxemburg_str_131_status') | bool(none) | iif('offen','geschlossen','unbekannt') }})
      - conditions:
        - condition: trigger
          id: geo_ma
        sequence:
        - service: notify.telegram_jo
          data:
            message: >
              {{ states('sensor.pixel_3a_ma_geokodierter_standort') }}
      - conditions:
        - condition: trigger
          id: alarm_jo
        sequence:
        - service: input_boolean.toggle
          target:
            entity_id: input_boolean.flur_alarm_jo
        - delay: 1
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: "on"
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Flur-Alarm ist jetzt an'
          - conditions:
            - condition: state
              entity_id: input_boolean.flur_alarm_jo
              state: "off"
            sequence:
            - service: notify.telegram_jo
              data:
                message: 'Flur-Alarm ist jetzt aus'
#
###############################################
#####           Reminder Türen            #####
###############################################
- id: '241b7d80-e376-48f1-bfea-134b6e45acb4'
  alias: Reminder Türen
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: binary_sensor.reminder_tuer_partyraum
      to: 'on'
      id: tuer_partyraum_on
    - platform: state
      entity_id: binary_sensor.reminder_tuer_partyraum
      to: 'off'
      id: tuer_partyraum_off
    - platform: state
      entity_id: binary_sensor.reminder_tuer_werkelraum
      to: 'on'
      id: tuer_werkelraum_on
    - platform: state
      entity_id: binary_sensor.reminder_tuer_werkelraum
      to: 'off'
      id: tuer_werkelraum_off
    - platform: state
      entity_id: binary_sensor.reminder_tuer_speis
      to: 'on'
      id: tuer_speis_on
    - platform: state
      entity_id: binary_sensor.reminder_tuer_speis
      to: 'off'
      id: tuer_speis_off
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: tuer_partyraum_on
        sequence:
        - service: input_boolean.turn_on
          target:
            entity_id: input_boolean.reminder_tuer_partyraum
      - conditions:
        - condition: trigger
          id: tuer_partyraum_off
        sequence:
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.reminder_tuer_partyraum
      - conditions:
        - condition: trigger
          id: tuer_werkelraum_on
        sequence:
        - service: input_boolean.turn_on
          target:
            entity_id: input_boolean.reminder_tuer_werkelraum
      - conditions:
        - condition: trigger
          id: tuer_werkelraum_off
        sequence:
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.reminder_tuer_werkelraum
      - conditions:
        - condition: trigger
          id: tuer_speis_on
        sequence:
        - service: input_boolean.turn_on
          target:
            entity_id: input_boolean.reminder_tuer_speis
      - conditions:
        - condition: trigger
          id: tuer_speis_off
        sequence:
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.reminder_tuer_speis
#
###############################################
#####       Info-Benachrichtigungen       #####
###############################################
- id: 'b936cbb3-33a1-41d1-9aa5-190728ed6c87'
  alias: Info-Benachrichtigungen
  description: ''
  mode: queued
  trigger:
    - platform: state
      entity_id: binary_sensor.sicherung_keller_sd_rausgeflogen
      to: 'off'
      id: notify_jo_always
      variables:
        message: "Info: Hebeanlage hat wieder Strom"
    - platform: state
      entity_id: binary_sensor.storung_heizaktor_eg_notify
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Störung Heizungsaktor EG"
    - platform: state
      entity_id: binary_sensor.storung_heizaktor_og
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Störung Heizungsaktor OG"
    - platform: state
      entity_id: binary_sensor.storung_heizaktor_eg_notify
      to: 'off'
      id: notify_jo_always
      variables:
        message: "Störung Heizungsaktor EG vorbei"
    - platform: state
      entity_id: binary_sensor.storung_heizaktor_og
      to: 'off'
      id: notify_jo_always
      variables:
        message: "Störung Heizungsaktor OG vorbei"
    - platform: state
      entity_id: sensor.bosch_health_status
      to: 'error'
      id: notify_jo_always
      variables:
        message: "Störung Wärmepumpe"
    - platform: state
      entity_id: sensor.bosch_health_status
      to: 'ok'
      id: notify_jo_but_not_from_unavailable
      variables:
        message: "Wärmepumpe wieder OK"
    - platform: state
      entity_id: sensor.bosch_health_status
      to: 'maintenance'
      id: notify_jo_always
      variables:
        message: "Wärmepumpe im Wartungsmodus"
    - platform: state
      entity_id: binary_sensor.heizstab_ist_an
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Heizstab ist an"
    - platform: state
      entity_id: binary_sensor.heizstab_ist_an
      to: 'off'
      id: notify_jo_but_not_from_unavailable
      variables:
        message: "Heizstab ist wieder aus"
    - platform: state
      entity_id: binary_sensor.ubertemperaturalarm_led_aktor_1
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Übertemperatur-Alarm LED-Aktor 1"
    - platform: state
      entity_id: binary_sensor.ubertemperaturalarm_led_aktor_2
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Übertemperatur-Alarm LED-Aktor 2"
    - platform: state
      entity_id: binary_sensor.ubertemperaturalarm_led_aktor_3
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Übertemperatur-Alarm LED-Aktor 3"
    - platform: state
      entity_id: binary_sensor.ubertemperaturalarm_led_aktor_4
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Übertemperatur-Alarm LED-Aktor 4"
    - platform: state
      entity_id: binary_sensor.ubertemperaturalarm_led_aktor_5
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Übertemperatur-Alarm LED-Aktor 5"
    - platform: state
      entity_id: binary_sensor.ubertemperaturalarm_led_aktor_6
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Übertemperatur-Alarm LED-Aktor 6"
    - platform: state
      entity_id: binary_sensor.ubertemperaturalarm_led_aktor_7
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Übertemperatur-Alarm LED-Aktor 7"
    - platform: state
      entity_id: binary_sensor.uberstromalarm_led_aktor_1
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Überstrom-Alarm LED-Aktor 1"
    - platform: state
      entity_id: binary_sensor.uberstromalarm_led_aktor_2
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Überstrom-Alarm LED-Aktor 2"
    - platform: state
      entity_id: binary_sensor.uberstromalarm_led_aktor_3
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Überstrom-Alarm LED-Aktor 3"
    - platform: state
      entity_id: binary_sensor.uberstromalarm_led_aktor_4
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Überstrom-Alarm LED-Aktor 4"
    - platform: state
      entity_id: binary_sensor.uberstromalarm_led_aktor_5
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Überstrom-Alarm LED-Aktor 5"
    - platform: state
      entity_id: binary_sensor.uberstromalarm_led_aktor_6
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Überstrom-Alarm LED-Aktor 6"
    - platform: state
      entity_id: binary_sensor.uberstromalarm_led_aktor_7
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Überstrom-Alarm LED-Aktor 7"
    - platform: state
      entity_id: binary_sensor.windalarm_2
      to: 'on'
      id: notify_jo_always
      variables:
        message: "Windalarm 60 kmh - Beginn"
    - platform: state
      entity_id: binary_sensor.windalarm_2
      to: 'off'
      id: notify_jo_but_not_from_unavailable
      variables:
        message: "Windalarm 60 kmh - Ende"
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: notify_jo_always
        sequence:
        - service: notify.telegram_jo
          data:
            message: "{{ message }}"
      - conditions:
        - condition: trigger
          id: notify_jo_but_not_from_unavailable
        - condition: template
          value_template: >
            {{ trigger.from_state.state not in ['unavailable', 'unknown', 'none'] }}
        sequence:
        - service: notify.telegram_jo
          data:
            message: "{{ message }}"
#
###############################################
#####       HA Restart Zeitstempel        #####
###############################################
- id: 'ddc0acdf-7f6c-408b-8bde-6e9d8b88bed2'
  alias: HA Restart Zeitstempel
  description: ''
  trigger:
    - platform: homeassistant
      event: start
  condition: []
  action:
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.ha_last_restart
      data:
        timestamp: "{{ now() | as_timestamp }}"
  mode: single
#
###############################################
##### Stromverbrauch - Benachrichtigungen #####
###############################################
- id: '8ac554cc-fccf-4e36-99f4-249ff0e7fd0f'
  alias: Stromverbrauch - Benachrichtigungen
  description: ''
  mode: queued
  trigger:
    - platform: time
      at: "06:00:00"
      id: daily
    - platform: time
      at: "06:00:05"
      id: monthly
    - platform: time
      at: "06:00:10"
      id: yearly
  condition: []
  action:
    - choose:
      - conditions:
        - condition: trigger
          id: daily
        sequence:
        - service: notify.telegram_jo
          data:
            message: >-
              Stromverbrauch gestern:

              {{ state_attr('sensor.stromzahler_powercalc_verbrauch_gesamt_daily','last_period') | float(0) | round(1) }} kWh, davon {{ state_attr('sensor.template_einsparung_verbrauch_gesamt_abrechnung_gestern', 'prozent') }} % PV

              {{ '%.2f'%(state_attr('sensor.kosten_verbrauch_gesamt_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (und {{ '%.2f'%(states('sensor.template_einsparung_verbrauch_gesamt_abrechnung_gestern') | float(0)) }} € gespart)


              Bekannte Verbr.: {{ state_attr('sensor.stromzahler_powercalc_bekannte_verbraucher_daily','last_period') | float(0) | round(1) }} kWh ({{ ((state_attr('sensor.stromzahler_powercalc_bekannte_verbraucher_daily','last_period') | float(0)) / (state_attr('sensor.stromzahler_powercalc_verbrauch_gesamt_daily','last_period') | float(0)) * 100) | round(0) }} %)


              Wärmepumpe: 

              {{ state_attr('sensor.stromzahler_powercalc_warmepumpe_gesamt_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_waermepumpe_gesamt_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_warmepumpe_gesamt_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_warmepumpe_gesamt_abrechnung_gestern', 'prozent') }}%)

              Licht: 

              {{ state_attr('sensor.stromzahler_powercalc_alle_lichter_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_alle_lichter_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_alle_lichter_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_alle_lichter_abrechnung_gestern', 'prozent') }}%)

              Küchengeräte (ohne KS): 

              {{ state_attr('sensor.stromzahler_powercalc_kuchengerate_ohne_kuhlschrank_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_kuchengerate_ohne_kuhlschrank_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_kuchengerate_ohne_kuhlschrank_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_kuchengerate_ohne_kuhlschrank_abrechnung_gestern', 'prozent') }}%)

              Kühlgeräte: 

              {{ state_attr('sensor.stromzahler_powercalc_kuhlgerate_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_kuhlgerate_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_kuhlgerate_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_kuhlgerate_abrechnung_gestern', 'prozent') }}%)

              Multimedia: 

              {{ state_attr('sensor.stromzahler_powercalc_multimedia_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_multimedia_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_multimedia_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_multimedia_abrechnung_gestern', 'prozent') }}%)

              WM und Trockner: 

              {{ state_attr('sensor.stromzahler_powercalc_waschmaschine_und_trockner_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_waschmaschine_und_trockner_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_waschmaschine_und_trockner_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_waschmaschine_und_trockner_abrechnung_gestern', 'prozent') }}%)

              Haustechnik: 

              {{ state_attr('sensor.stromzahler_powercalc_haustechnik_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_haustechnik_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_haustechnik_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_haustechnik_abrechnung_gestern', 'prozent') }}%)

              Netzwerk, Telefon, Computer: 

              {{ state_attr('sensor.stromzahler_powercalc_netzwerk_telefon_und_computer_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_netzwerk_telefon_und_computer_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_netzwerk_telefon_und_computer_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_netzwerk_telefon_und_computer_abrechnung_gestern', 'prozent') }}%)

              Luftbe- und entfeuchter: 

              {{ state_attr('sensor.stromzahler_powercalc_luftentfeuchter_und_befeuchter_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_luftentfeuchter_und_befeuchter_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_luftentfeuchter_und_befeuchter_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_luftentfeuchter_und_befeuchter_abrechnung_gestern', 'prozent') }}%)

              Heizung Partyraum: 

              {{ state_attr('sensor.stromzahler_powercalc_heizung_partyraum_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_heizung_partyraum_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_heizung_partyraum_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_heizung_partyraum_abrechnung_gestern', 'prozent') }}%)

              Pool: 

              {{ state_attr('sensor.stromzahler_powercalc_pool_daily','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_pool_mit_pv_abrechnung_daily','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_pool_abrechnung_gestern') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_pool_abrechnung_gestern', 'prozent') }}%)
      - conditions:
        - condition: trigger
          id: monthly
        - condition: template
          value_template: >
            {{ now().day == 1 }}
        sequence:
        - service: notify.telegram_jo
          data:
            message: >-
              Stromverbrauch letzter Monat:

              {{ state_attr('sensor.stromzahler_powercalc_verbrauch_gesamt_monthly','last_period') | float(0) | round(1) }} kWh, davon {{ state_attr('sensor.template_einsparung_verbrauch_gesamt_abrechnung_letzter_monat', 'prozent') }} % PV

              {{ '%.2f'%(state_attr('sensor.kosten_verbrauch_gesamt_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (und {{ '%.2f'%(states('sensor.template_einsparung_verbrauch_gesamt_abrechnung_letzter_monat') | float(0)) }} € gespart)


              Bekannte Verbr.: {{ state_attr('sensor.stromzahler_powercalc_bekannte_verbraucher_monthly','last_period') | float(0) | round(1) }} kWh ({{ ((state_attr('sensor.stromzahler_powercalc_bekannte_verbraucher_monthly','last_period') | float(0)) / (state_attr('sensor.stromzahler_powercalc_verbrauch_gesamt_monthly','last_period') | float(0)) * 100) | round(0) }} %)


              Wärmepumpe: 

              {{ state_attr('sensor.stromzahler_powercalc_warmepumpe_gesamt_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_waermepumpe_gesamt_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_warmepumpe_gesamt_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_warmepumpe_gesamt_abrechnung_letzter_monat', 'prozent') }}%)

              Licht: 

              {{ state_attr('sensor.stromzahler_powercalc_alle_lichter_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_alle_lichter_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_alle_lichter_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_alle_lichter_abrechnung_letzter_monat', 'prozent') }}%)

              Küchengeräte (ohne KS): 

              {{ state_attr('sensor.stromzahler_powercalc_kuchengerate_ohne_kuhlschrank_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_kuchengerate_ohne_kuhlschrank_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_kuchengerate_ohne_kuhlschrank_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_kuchengerate_ohne_kuhlschrank_abrechnung_letzter_monat', 'prozent') }}%)

              Kühlgeräte: 

              {{ state_attr('sensor.stromzahler_powercalc_kuhlgerate_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_kuhlgerate_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_kuhlgerate_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_kuhlgerate_abrechnung_letzter_monat', 'prozent') }}%)

              Multimedia: 

              {{ state_attr('sensor.stromzahler_powercalc_multimedia_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_multimedia_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_multimedia_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_multimedia_abrechnung_letzter_monat', 'prozent') }}%)

              WM und Trockner: 

              {{ state_attr('sensor.stromzahler_powercalc_waschmaschine_und_trockner_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_waschmaschine_und_trockner_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_waschmaschine_und_trockner_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_waschmaschine_und_trockner_abrechnung_letzter_monat', 'prozent') }}%)

              Haustechnik: 

              {{ state_attr('sensor.stromzahler_powercalc_haustechnik_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_haustechnik_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_haustechnik_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_haustechnik_abrechnung_letzter_monat', 'prozent') }}%)

              Netzwerk, Telefon, Computer: 

              {{ state_attr('sensor.stromzahler_powercalc_netzwerk_telefon_und_computer_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_netzwerk_telefon_und_computer_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_netzwerk_telefon_und_computer_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_netzwerk_telefon_und_computer_abrechnung_letzter_monat', 'prozent') }}%)

              Luftbe- und entfeuchter: 

              {{ state_attr('sensor.stromzahler_powercalc_luftentfeuchter_und_befeuchter_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_luftentfeuchter_und_befeuchter_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_luftentfeuchter_und_befeuchter_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_luftentfeuchter_und_befeuchter_abrechnung_letzter_monat', 'prozent') }}%)

              Heizung Partyraum: 

              {{ state_attr('sensor.stromzahler_powercalc_heizung_partyraum_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_heizung_partyraum_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_heizung_partyraum_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_heizung_partyraum_abrechnung_letzter_monat', 'prozent') }}%)

              Pool: 

              {{ state_attr('sensor.stromzahler_powercalc_pool_monthly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_pool_mit_pv_abrechnung_monthly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_pool_abrechnung_letzter_monat') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_pool_abrechnung_letzter_monat', 'prozent') }}%)
      - conditions:
        - condition: trigger
          id: yearly
        - condition: template
          value_template: >
            {{ (now().day == 1) and (now().month == 1) }}
        sequence:
        - service: notify.telegram_jo
          data:
            message: >-
              Stromverbrauch letztes Kalenderjahr:

              (ab Mai 22)

              {{ state_attr('sensor.stromzahler_powercalc_verbrauch_gesamt_yearly','last_period') | float(0) | round(1) }} kWh, davon {{ state_attr('sensor.template_einsparung_verbrauch_gesamt_abrechnung_letztes_jahr', 'prozent') }} % PV

              {{ '%.2f'%(state_attr('sensor.kosten_verbrauch_gesamt_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (und {{ '%.2f'%(states('sensor.template_einsparung_verbrauch_gesamt_abrechnung_letztes_jahr') | float(0)) }} € gespart)


              Bekannte Verbr.: {{ state_attr('sensor.stromzahler_powercalc_bekannte_verbraucher_yearly','last_period') | float(0) | round(1) }} kWh ({{ ((state_attr('sensor.stromzahler_powercalc_bekannte_verbraucher_yearly','last_period') | float(0)) / (state_attr('sensor.stromzahler_powercalc_verbrauch_gesamt_yearly','last_period') | float(0)) * 100) | round(0) }} %)


              Wärmepumpe: 

              {{ state_attr('sensor.stromzahler_powercalc_warmepumpe_gesamt_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_waermepumpe_gesamt_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_warmepumpe_gesamt_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_warmepumpe_gesamt_abrechnung_letztes_jahr', 'prozent') }}%)

              Licht: 

              {{ state_attr('sensor.stromzahler_powercalc_alle_lichter_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_alle_lichter_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_alle_lichter_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_alle_lichter_abrechnung_letztes_jahr', 'prozent') }}%)

              Küchengeräte (ohne KS): 

              {{ state_attr('sensor.stromzahler_powercalc_kuchengerate_ohne_kuhlschrank_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_kuchengerate_ohne_kuhlschrank_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_kuchengerate_ohne_kuhlschrank_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_kuchengerate_ohne_kuhlschrank_abrechnung_letztes_jahr', 'prozent') }}%)

              Kühlgeräte: 

              {{ state_attr('sensor.stromzahler_powercalc_kuhlgerate_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_kuhlgerate_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_kuhlgerate_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_kuhlgerate_abrechnung_letztes_jahr', 'prozent') }}%)

              Multimedia: 

              {{ state_attr('sensor.stromzahler_powercalc_multimedia_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_multimedia_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_multimedia_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_multimedia_abrechnung_letztes_jahr', 'prozent') }}%)

              WM und Trockner: 

              {{ state_attr('sensor.stromzahler_powercalc_waschmaschine_und_trockner_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_waschmaschine_und_trockner_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_waschmaschine_und_trockner_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_waschmaschine_und_trockner_abrechnung_letztes_jahr', 'prozent') }}%)

              Haustechnik: 

              {{ state_attr('sensor.stromzahler_powercalc_haustechnik_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_haustechnik_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_haustechnik_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_haustechnik_abrechnung_letztes_jahr', 'prozent') }}%)

              Netzwerk, Telefon, Computer: 

              {{ state_attr('sensor.stromzahler_powercalc_netzwerk_telefon_und_computer_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_netzwerk_telefon_und_computer_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_netzwerk_telefon_und_computer_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_netzwerk_telefon_und_computer_abrechnung_letztes_jahr', 'prozent') }}%)

              Luftbe- und entfeuchter: 

              {{ state_attr('sensor.stromzahler_powercalc_luftentfeuchter_und_befeuchter_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_luftentfeuchter_und_befeuchter_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_luftentfeuchter_und_befeuchter_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_luftentfeuchter_und_befeuchter_abrechnung_letztes_jahr', 'prozent') }}%)

              Heizung Partyraum: 

              {{ state_attr('sensor.stromzahler_powercalc_heizung_partyraum_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_heizung_partyraum_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_heizung_partyraum_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_heizung_partyraum_abrechnung_letztes_jahr', 'prozent') }}%)

              Pool: 

              {{ state_attr('sensor.stromzahler_powercalc_pool_yearly','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_pool_mit_pv_abrechnung_yearly','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_pool_abrechnung_letztes_jahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_pool_abrechnung_letztes_jahr', 'prozent') }}%)
      - conditions:
        - condition: trigger
          id: yearly
        - condition: template
          value_template: >
            {{ (now().day == 1) and (now().month == 7) }}
        sequence:
        - service: notify.telegram_jo
          data:
            message: >-
              Stromverbrauch letztes Winterjahr:

              (ab Mai 22)

              {{ state_attr('sensor.stromzahler_powercalc_verbrauch_gesamt_winteryear','last_period') | float(0) | round(1) }} kWh, davon {{ state_attr('sensor.template_einsparung_verbrauch_gesamt_abrechnung_letztes_winterjahr', 'prozent') }} % PV

              {{ '%.2f'%(state_attr('sensor.kosten_verbrauch_gesamt_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (und {{ '%.2f'%(states('sensor.template_einsparung_verbrauch_gesamt_abrechnung_letztes_winterjahr') | float(0)) }} € gespart)


              Bekannte Verbr.: {{ state_attr('sensor.stromzahler_powercalc_bekannte_verbraucher_winteryear','last_period') | float(0) | round(1) }} kWh ({{ ((state_attr('sensor.stromzahler_powercalc_bekannte_verbraucher_winteryear','last_period') | float(0)) / (state_attr('sensor.stromzahler_powercalc_verbrauch_gesamt_winteryear','last_period') | float(0)) * 100) | round(0) }} %)


              Wärmepumpe: 

              {{ state_attr('sensor.stromzahler_powercalc_warmepumpe_gesamt_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_waermepumpe_gesamt_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_warmepumpe_gesamt_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_warmepumpe_gesamt_abrechnung_letztes_winterjahr', 'prozent') }}%)

              Licht: 

              {{ state_attr('sensor.stromzahler_powercalc_alle_lichter_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_alle_lichter_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_alle_lichter_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_alle_lichter_abrechnung_letztes_winterjahr', 'prozent') }}%)

              Küchengeräte (ohne KS): 

              {{ state_attr('sensor.stromzahler_powercalc_kuchengerate_ohne_kuhlschrank_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_kuchengerate_ohne_kuhlschrank_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_kuchengerate_ohne_kuhlschrank_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_kuchengerate_ohne_kuhlschrank_abrechnung_letztes_winterjahr', 'prozent') }}%)

              Kühlgeräte: 

              {{ state_attr('sensor.stromzahler_powercalc_kuhlgerate_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_kuhlgerate_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_kuhlgerate_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_kuhlgerate_abrechnung_letztes_winterjahr', 'prozent') }}%)

              Multimedia: 

              {{ state_attr('sensor.stromzahler_powercalc_multimedia_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_multimedia_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_multimedia_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_multimedia_abrechnung_letztes_winterjahr', 'prozent') }}%)

              WM und Trockner: 

              {{ state_attr('sensor.stromzahler_powercalc_waschmaschine_und_trockner_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_waschmaschine_und_trockner_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_waschmaschine_und_trockner_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_waschmaschine_und_trockner_abrechnung_letztes_winterjahr', 'prozent') }}%)

              Haustechnik: 

              {{ state_attr('sensor.stromzahler_powercalc_haustechnik_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_haustechnik_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_haustechnik_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_haustechnik_abrechnung_letztes_winterjahr', 'prozent') }}%)

              Netzwerk, Telefon, Computer: 

              {{ state_attr('sensor.stromzahler_powercalc_netzwerk_telefon_und_computer_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_netzwerk_telefon_und_computer_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_netzwerk_telefon_und_computer_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_netzwerk_telefon_und_computer_abrechnung_letztes_winterjahr', 'prozent') }}%)

              Luftbe- und entfeuchter: 

              {{ state_attr('sensor.stromzahler_powercalc_luftentfeuchter_und_befeuchter_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_luftentfeuchter_und_befeuchter_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_luftentfeuchter_und_befeuchter_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_luftentfeuchter_und_befeuchter_abrechnung_letztes_winterjahr', 'prozent') }}%)

              Heizung Partyraum: 

              {{ state_attr('sensor.stromzahler_powercalc_heizung_partyraum_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_heizung_partyraum_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_heizung_partyraum_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_heizung_partyraum_abrechnung_letztes_winterjahr', 'prozent') }}%)

              Pool: 

              {{ state_attr('sensor.stromzahler_powercalc_pool_winteryear','last_period') | float(0) | round(1) }} kWh / {{ '%.2f'%(state_attr('sensor.kosten_pool_mit_pv_abrechnung_winteryear','last_period') | float(0)) }} € (PV: -{{ '%.2f'%(states('sensor.template_einsparung_pool_abrechnung_letztes_winterjahr') | float(0)) }} € / -{{ state_attr('sensor.template_einsparung_pool_abrechnung_letztes_winterjahr', 'prozent') }}%)
      default: []
#
###############################################
#####  Erinnerung Batterie Nuki-Schloss   #####
###############################################
- id: 'df1f921b-c133-4363-8490-6f91dd80e12c'
  alias: Erinnerung Batterie Nuki-Schloss
  description: ''
  trigger:
    - platform: template
      value_template: "{{ state_attr('lock.haustur','battery_critical') == true }}"
  condition: []
  action:
    - repeat:
        while:
          - condition: template
            value_template: "{{ state_attr('lock.haustur','battery_critical') == true }}"
        sequence:
          - service: notify.telegram_jo
            data:
              message: Batterie Nuki-Schloss ist leer
          - delay:
              hours: 8
              minutes: 0
              seconds: 0
              milliseconds: 0
  mode: single