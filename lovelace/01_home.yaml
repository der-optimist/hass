title: Home
path: home
icon: mdi:home-outline
type: custom:grid-layout
layout:
  grid-template-columns: 25% 25% 25% 25%
  grid-template-rows: auto
  grid-template-areas: |
    "main_left meteogram meteogram meteogram"
    "main_left todo garbage birthdays"
  mediaquery:
    "(max-width: 800px)":
      grid-template-columns: 100%
      grid-template-areas: |
        "meteogram"
        "main_left"
        "todo"
        "garbage"
        "birthdays"
cards:
  - type: vertical-stack
    view_layout:
      grid-area: main_left
    cards:
      - type: horizontal-stack
        cards:
          - type: markdown
            style: |
              h1 {
                font-weight: 300;
                font-size: 2.4em;
              }  
            content: >
              # {{ '%.1f'%(states('sensor.temp_esszimmer_pm') | float(0)) | float(0) }}°C
              
              Luftfeuchtigkeit: {{ states('sensor.luftfeuchtigkeit_kuche_aqara') }}%
          - type: markdown
            style: |
              h1 {
                font-weight: 300;
                font-size: 2.4em;
              }
            content: >
              # {{ states('sensor.time') }}
              
              {{ states('sensor.date_template') }}
      - type: custom:mini-graph-card
        style: |
          state__value {
            font-size: 2em;
          }
        entities: 
          - sensor.temp_wetterstation
        name: Außentemperatur
        hour24: true
        decimals: 1
        show:
          labels: true
#      - type: entities
#        title: "Wer ist wo..."
#        show_header_toggle: false
#        entities:
#          - entity: sensor.location_jo
      - type: entities
        title: Pizza Timer
        show_header_toggle: false
        entities:
          - type: custom:slider-entity-row
            entity: input_number.pizza_timer_2
            full_row: true
      - type: horizontal-stack
        cards:
          - type: entity-button
            name: Pizza
            icon: mdi:pizza
            tap_action:
              action: call-service
              service: input_number.set_value
              service_data:
                entity_id: input_number.pizza_timer_2
                value: 12
            entity: input_number.pizza_timer_2
          - type: entity-button
            name: runter
            icon: mdi:arrow-down-bold-box-outline
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.jal_wohnbereich_runter
            entity: scene.jal_wohnbereich_runter
          - type: entity-button
            name: hoch
            icon: mdi:arrow-up-bold-box-outline
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.jal_wohnbereich_hoch
            entity: scene.jal_wohnbereich_hoch
  - type: custom:hui-element
    view_layout:
      grid-area: meteogram
    card_type: picture-elements
    image: /local/meteograms/meteogram.png
    elements:
      - type: image
        entity: camera.meteogram
        camera_image: camera.meteogram
        style:
          left: 50%
          top: 50%
          width: 100%
          height: 100%
  - type: vertical-stack
    view_layout:
      grid-area: todo
      align-self: start
    cards:
      - type: custom:auto-entities
        show_empty: false
        card:
          type: entities
          title: "zu erledigen"
          show_header_toggle: false
        filter:
          include:
            - entity_id: "switch.reminder*"
              state: "on"
            - entity_id: "input_boolean.reminder_*"
              state: "on"
      - type: custom:swipe-card
        cards: 
#          - type: custom:apexcharts-card
#            experimental:
#              color_threshold: true
#            graph_span: 48h
#            update_interval: 5min
#            apex_config:
#              yaxis:
#                min: 0
#                max: 10000
#                tickAmount: 5
#            now:
#              show: True
#              label: "jetzt"
#            span:
#              start: hour
#            series:
#              - entity: sensor.solcast_forecast_chart
#                data_generator: | # This is what builds the data
#                  return entity.attributes.timestamps.map((ts, index) => {
#                    return [new Date(ts).getTime(), entity.attributes.forecast_values[index]];
#                  });
#                color_threshold:
#                  - value: 0
#                    color: gray
#                  - value: 1500
#                    color: gray
#                  - value: 2000
#                    color: darkorange
#                  - value: 6552
#                    color: darkorange
#                  - value: 6852
#                    color: lime
#          - type: custom:apexcharts-card
#            graph_span: 5d
#            update_interval: 15min
#            stacked: True
#            apex_config:
#              yaxis:
#                min: 0
#              legend:
#                show: false
#            span:
#              start: day
#            series:
#              - entity: sensor.solcast_forecast_chart
#                type: column
#                show:
#                  datalabels: True
#                data_generator: | # This is what builds the data
#                  return entity.attributes.timestamps_daily.map((ts_d, index) => {
#                    return [new Date(ts_d).getTime(), entity.attributes.forecast_values_daily[index]];
#                  });
#              - entity: sensor.solcast_forecast_chart
#                type: column
#                color: green
#                show:
#                  datalabels: True
#                data_generator: | # This is what builds the data
#                  return entity.attributes.timestamp_today.map((ts_d, index) => {
#                    return [new Date(ts_d).getTime(), entity.attributes.pv_production_today[index]];
#                  });
          - type: entities
            title: "PV-Anlage"
            show_header_toggle: false
            entities:
              - type: custom:template-entity-row
                name: PV-Leistung aktuell
                entity: sensor.el_leistung_pv_ac
                state: "{{ ((float(states('sensor.el_leistung_pv_ac'),0) / 100) | round(0)) * 100 }} W"
              - type: custom:template-entity-row
                name: Verbrauch aktuell
                entity: sensor.el_leistung_verbrauch_gesamt
                state: "{{ ((float(states('sensor.el_leistung_verbrauch_gesamt'),0) / 10) | round(0)) * 10 }} W"
              - type: custom:template-entity-row
                name: PV-Einspeisung aktuell
                entity: sensor.el_leistung_einspeisung
                state: "{{ ((float(states('sensor.el_leistung_einspeisung'),0) / 100) | round(0)) * 100 }} W"
              - sensor.pv_geldertrag_gesamt
      - type: entities
        show_header_toggle: false
        entities:
          - type: custom:template-entity-row
            name: Strompreis aktuell
            entity: sensor.strompreis_effektiv_letzte_3_minuten
            state: "{{ '%.0f'%(100*(states('sensor.strompreis_effektiv_letzte_3_minuten') | float(0))) }} ct"
#          - type: divider
#            style: 
#              height: 1px
#              background-color: "#ff9c27"
#              opacity: 0.25
#          - type: custom:template-entity-row
#            name: 7-Tage Inzidenz RV
#            icon: mdi:medical-bag
#            entity: sensor.lk_ravensburg_weekincidence
#            state: "{{ '%.0f'%(states('sensor.lk_ravensburg_weekincidence')) | float(0) | round(0) }}"
  - type: vertical-stack
    view_layout:
      grid-area: garbage
      align-self: start
    cards:
      - type: custom:auto-entities
        show_empty: false
        card:
          type: markdown
          content: |
            {%- set mapper = {0:'"#eeeeee"',1:'"#F2DB06"',2:'"#FB8D00"',3:'"#F9413D"',4:'"#F300FF"'} %}
            {% set ns = namespace(first=true) %}
            {%- for sensor in states.sensor %}
              {%- if 'sensor.dwd_warn' in sensor.entity_id and sensor.state != "off" %}
                {%- set danger = sensor.attributes["Gefahr (0-4)"] %}
                {% if ns.first  == false %}
            ----------------------------------------
                {% endif %}
                {%- set ns.first = false %}
            {{ sensor.state}}: 
            <font color = {{- mapper[danger] if danger in mapper else 'grey'}}>**{{ sensor.attributes.friendly_name }}**</font>
            {%- if danger == 0 %}
            Gefahrenstufe: Info
            {%- elif danger == 1 %}
            Gefahrenstufe: gering
            {%- elif danger == 2 %}
            Gefahrenstufe: mittel
            {%- elif danger == 3 %}
            Gefahrenstufe: hoch
            {%- elif danger == 4 %}
            Gefahrenstufe: extrem
            {%- else %}
            Gefahrenstufe: unbekannt
            {%- endif %}
              {%- endif %}

            {%- endfor %}
        filter:
          include:
            - entity_id: "sensor.dwd_warn*"
          exclude:
            - state: "off"
      - type: custom:auto-entities
        show_empty: false
        card:
          type: entities
          title: "Abfall"
          show_header_toggle: false
        filter:
          include:
            - entity_id: "sensor.abfall_naechste*"
        sort:
          method: attribute
          attribute: daysTo
          numeric: true
      - type: entities
        show_header_toggle: false
        entities:
        - entity: input_boolean.arbeit_theke
          name: Arbeit Theke
  - type: vertical-stack
    view_layout:
      grid-area: birthdays
    cards:
      - type: custom:auto-entities
        show_empty: false
        card:
          type: entities
          title: Batterie wechseln
        filter:
          include:
            - entity_id: "*battery"
              state: '< 15'
      #          - type: picture-elements
      #            image: /local/camera_abstellraum/last_motion.jpg
      #            elements:
      #              - type: image
      #                entity: camera.abstellraum_letze_bewegung
      #                camera_image: camera.abstellraum_letze_bewegung
      #                style:
      #                  left: 50%
      #                  top: 50%
      #                  width: 100%
      #                  height: 100%
#      - type: custom:auto-entities
#        show_empty: false
#        card:
#          type: entities
#          title: "Geburtstage"
#          show_header_toggle: false
#        filter:
#          include:
#            - entity_id: "sensor.birthday*"
#          exclude:
#            - state: "off" 
      - type: custom:atomic-calendar-revive
        name: Geburtstage
        enableModeChange: true
        firstDayOfWeek: 1
        maxDaysToShow: 30
        maxEventCount: 4
        entities:
          - calendar.geburtstage_und_jahrestag
        showMonth: true
        showWeekDay: true
        showCurrentEventLine: false
        showFullDayProgress: true
        showProgressBar: false
        showDescription: false
        europeanDate: true
        showHiddenText: false
        showHours: false
        showLoader: false
        refreshInterval: 600
      - type: entities
        show_header_toggle: false
        entities:
        - entity: input_boolean.eisschutz_jalousien
          name: Eisschutz Jalousien
        - entity: input_boolean.gaeste_abends
          name: Gäste
